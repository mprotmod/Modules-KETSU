{
  "moduleInfo": {
    "moduleName": "Scans Mangas",
    "moduleInitials": "SM",
    "moduleDesc": "Module Ketsu pour Scans Mangas",
    "developer": "Frizrat",
    "moduleID": "21290521",
    "moduleImage": "https://i.postimg.cc/MTqkm3hx/Scans-Mangas.png",
    "moduleVersion": 1.41,
    "changelog": "Les images s'affichent de nouveau",
    "moduleLenguage": "FR",
    "moduleType": "Image",
    "nsfw": false,
    "baseURL": "https://scansmangas.me/",
    "moduleDeveloperSite": "https://bilnaa.github.io/main",
    "UpdateSite": "https://raw.githubusercontent.com/mprotmod/Modules-KETSU/main/Module%20Parser%20KETSU//ScansMangas/ScansMangasKETSU.json",
    "preferedServer": "",
    "preferedDownloadServer": "",
    "blackListed": []
  },
  "global": {
    "variables": [],
    "cookies": [],
    "headers": []
  },
  "mainPage": [
    {
      "request": {
        "url": "https://scansmangas.me/",
        "method": "get",
        "headers": [],
        "httpBody": null
      },
      "extra": {
        "commands": [],
        "extraInfo": []
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "const DefaultLayouts = { ultraWideFull : 'ultraWideFull', ultraWide : 'ultraWide', wideFull : 'wideFull', wide : 'wide', wideStrechedFull : 'wideStrechedFull', wideStrechedFullDouble : 'WideStrechedFullDouble', wideStreched : 'wideStreched', wideStrechedDouble : 'wideStrechedDouble', wideStrechedFullList : 'wideStrechedFullList', wideStrechedList : 'wideStrechedList', doublets : 'doublets', doubletsDouble : 'doubletsDouble', doubletsFull : 'doubletsFull', doubletsFullDouble : 'doubletsFullDouble', doubletsConstant : 'doubletsConstant', doubletsDoubleConstant : 'doubletsDoubleConstant', doubletsFullConstant : 'doubletsFullConstant', doubletsFullDoubleConstant : 'doubletsFullDoubleConstant', longDoublets : 'longDoublets', longDoubletsDouble : 'longDoubletsDouble', longDoubletsFull : 'longDoubletsFull', longDoubletsFullDouble : 'longDoubletsFullDouble', longDoubletsConstant : 'longDoubletsConstant', longDoubletsDoubleConstant : 'longDoubletsDoubleConstant', longDoubletsFullConstant : 'longDoubletsFullConstant', longDoubletsFullDoubleConstant : 'longDoubletsFullDoubleConstant', triplets : 'triplets', tripletsDouble : 'tripletsDouble', tripletsFull : 'tripletsFull', tripletsFullDouble : 'tripletsFullDouble', tripletsConstant : 'tripletsConstant', tripletsDoubleConstant : 'tripletsDoubleConstant', tripletsFullConstant : 'tripletsFullConstant', tripletsFullDoubleConstant : 'tripletsFullDoubleConstant', longTriplets : 'longTriplets', longTripletsDouble : 'longTripletsDouble', longTripletsFull : 'longTripletsFull', longTripletsFullDouble : 'longTripletsFullDouble', longTripletsConstant : 'longTripletsConstant', longTripletsDoubleConstant : 'longTripletsDoubleConstant', longTripletsFullConstant : 'longTripletsFullConstant', longTripletsFullDoubleConstant : 'longTripletsFullDoubleConstant', none: ''}; const CellDesings = { Special1 : 'Special1', Special2 : 'Special2', Special3 : 'Special3', CELLHelperText : 'CELLHelperText', small1 : 'small1', small2 : 'small2', normal1 : 'normal1', normal2 : 'normal2', normal3 : 'normal3', normal4 : 'normal4', normal5 : 'normal5', normal7 : 'normal7', wide1 : 'wide1', wide2 : 'wide2', wide3 : 'wide3', wide4 : 'wide4', wide5 : 'wide5', wide6 : 'wide6', wide7 : 'wide7', wide8 : 'wide8', wide9 : 'wide9', wide10 : 'wide10', wide11 : 'wide11' }; const Paging = { leading : 'leading', centered : 'centered', none : '' };const Orientation = { horizontal : 'horizontal', vertical : 'vertical' }; function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link,openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;} var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML); const emptyKeyValue = [new KeyValue('','')];const imgsHeaders = [new KeyValue('Referer', parsedJson.request.url)]; var output = [];const sectionsName = ['', 'Derniers chapitres en ligne', 'Les plus populaires'];const selectors = { 'container': ['.slide-content', '.uta', '.serieslist.pop > ul li'], 'title': ['.ellipsis', 'a > h3', 'h2 > a'], 'desc': ['.excerpt', undefined, 'h2 > a'], 'field1': ['.extra-category', 'li > a', '.rating > i'], 'field2': ['.director', undefined, 'h2 > a'], 'cellDesing': [CellDesings.wide11, CellDesings.normal1, CellDesings.wide11], 'orientation': [Orientation.horizontal, Orientation.vertical, Orientation.horizontal], 'defaultLayout': [DefaultLayouts.wideFull, DefaultLayouts.longTripletsFullConstant, DefaultLayouts.wideFull]};for (x in sectionsName) { var searchArray = []; let sectionName = sectionsName[x]; for (container of document.querySelectorAll(selectors['container'][x])) { let img = container.querySelector('img').src; img = new ModuleRequest(img, 'get', imgsHeaders, null); let title = container.querySelector(selectors['title'][x]).textContent.trim(); let desc = container.querySelector(selectors['desc'][x])?.textContent.trim(); if (desc == undefined) { desc = ''; } let field1 = container.querySelector(selectors['field1'][x]).textContent.trim(); let field2 = container.querySelector(selectors['field2'][x])?.textContent.trim(); if (field2 == undefined) { field2 = ''; } let link = container.querySelector('a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); searchArray.push(new Data(img, title, desc, field1, field2, '', '', false, link)); } output.push(new Output(selectors['cellDesing'][x], selectors['orientation'][x], selectors['defaultLayout'][x], Paging.leading, new Section(sectionName, true), null, searchArray));}const mainPageObject = new MainPage(new ModuleRequest('','',emptyKeyValue,null),new Extra([new Commands('',emptyKeyValue)],emptyKeyValue),new JavascriptConfig(true,false,''),output);savedData.innerHTML = JSON.stringify(mainPageObject);"
      },
      "output": []
    }
  ],
  "search": [
    {
      "request": {
        "url": "https://scansmangas.me/page/<page>/?s=<searched>&post_type=manga",
        "method": "get",
        "headers": [],
        "httpBody": null
      },
      "separator": "+",
      "extra": {
        "commands": [],
        "extraInfo": []
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "const DefaultLayouts = { ultraWideFull : 'ultraWideFull', ultraWide : 'ultraWide', wideFull : 'wideFull', wide : 'wide', wideStrechedFull : 'wideStrechedFull', wideStrechedFullDouble : 'WideStrechedFullDouble', wideStreched : 'wideStreched', wideStrechedDouble : 'wideStrechedDouble', wideStrechedFullList : 'wideStrechedFullList', wideStrechedList : 'wideStrechedList', doublets : 'doublets', doubletsDouble : 'doubletsDouble', doubletsFull : 'doubletsFull', doubletsFullDouble : 'doubletsFullDouble', doubletsConstant : 'doubletsConstant', doubletsDoubleConstant : 'doubletsDoubleConstant', doubletsFullConstant : 'doubletsFullConstant', doubletsFullDoubleConstant : 'doubletsFullDoubleConstant', longDoublets : 'longDoublets', longDoubletsDouble : 'longDoubletsDouble', longDoubletsFull : 'longDoubletsFull', longDoubletsFullDouble : 'longDoubletsFullDouble', longDoubletsConstant : 'longDoubletsConstant', longDoubletsDoubleConstant : 'longDoubletsDoubleConstant', longDoubletsFullConstant : 'longDoubletsFullConstant', longDoubletsFullDoubleConstant : 'longDoubletsFullDoubleConstant', triplets : 'triplets', tripletsDouble : 'tripletsDouble', tripletsFull : 'tripletsFull', tripletsFullDouble : 'tripletsFullDouble', tripletsConstant : 'tripletsConstant', tripletsDoubleConstant : 'tripletsDoubleConstant', tripletsFullConstant : 'tripletsFullConstant', tripletsFullDoubleConstant : 'tripletsFullDoubleConstant', longTriplets : 'longTriplets', longTripletsDouble : 'longTripletsDouble', longTripletsFull : 'longTripletsFull', longTripletsFullDouble : 'longTripletsFullDouble', longTripletsConstant : 'longTripletsConstant', longTripletsDoubleConstant : 'longTripletsDoubleConstant', longTripletsFullConstant : 'longTripletsFullConstant', longTripletsFullDoubleConstant : 'longTripletsFullDoubleConstant', none: ''}; const CellDesings = { Special1 : 'Special1', Special2 : 'Special2', Special3 : 'Special3', CELLHelperText : 'CELLHelperText', small1 : 'small1', small2 : 'small2', normal1 : 'normal1', normal2 : 'normal2', normal3 : 'normal3', normal4 : 'normal4', normal5 : 'normal5', normal7 : 'normal7', wide1 : 'wide1', wide2 : 'wide2', wide3 : 'wide3', wide4 : 'wide4', wide5 : 'wide5', wide6 : 'wide6', wide7 : 'wide7', wide8 : 'wide8', wide9 : 'wide9', wide10 : 'wide10', wide11 : 'wide11'}; const Paging = { leading : 'leading', centered : 'centered', none : '' };const Orientation = { horizontal : 'horizontal', vertical : 'vertical' };function Search(request,extra,separator,javascriptConfig,output) { this.request = request; this.extra = extra; this.separator = separator; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url,method,headers,httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands,extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName,params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript,loadInWebView,javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key,value) { this.key = key; this.value = value;}function Output(cellDesing,orientation,defaultLayout,paging,section,layout,data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName,separator) { this.sectionName = sectionName; this.separator = separator;}function Data(image,title,description,field1,field2,field3,field4,isChapter,link,openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML); const emptyKeyValue = [new KeyValue('','')];const imgsHeaders = [new KeyValue('Referer', parsedJson.request.url.split('/page')[0])];var output = [];var searchArray = [];for (manga of document.querySelectorAll('.bsx')) { let img = manga.querySelector('img').src; img = new ModuleRequest(img, 'get', imgsHeaders, null); let title = manga.querySelector('a').title; let rating = ''; try { rating = manga.querySelector('.rating > i').textContent + '/10'; } catch{} let link = manga.querySelector('a').href; link = new ModuleRequest(link, 'get', emptyKeyValue, null); searchArray.push(new Data(img,title,'',rating,'','','',false,link));}output.push(new Output(CellDesings.normal1,Orientation.vertical,DefaultLayouts.longTripletsFullConstant,Paging.none,new Section('', true),null,searchArray));const searchPageObject = new Search(new ModuleRequest('','',emptyKeyValue,null),new Extra([new Commands('',emptyKeyValue)],emptyKeyValue),'',new JavascriptConfig(true,false,''),output);savedData.innerHTML = JSON.stringify(searchPageObject);"
      },
      "output": []
    }
  ],
  "info": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [],
        "httpBody": null
      },
      "extra": {
        "commands": [],
        "extraInfo": []
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Info(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Chapter(chapName, link,openInWebView) { this.chapName = chapName; this.link = link; this.openInWebView = openInWebView;}function Output(image, title, link, description, genres, field1, field2, field3, field4, chapters) { this.image = image; this.link = link; this.title = title; this.description = description; this.genres = genres; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.chapters = chapters;}var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const emptyKeyValue = [new KeyValue('', '')];const imgsHeaders = [new KeyValue('Referer', parsedJson.request.url.split('/manga')[0])];var image = document.querySelector('.bigcover > .ime > img').src;image = new ModuleRequest(image, 'get', imgsHeaders, null);var title = document.querySelector('.infox > h1').textContent;var desc = '';try { desc = document.querySelector('.entry-content-single').textContent.trim(); } catch{}var genres = [];var sortie = '';var statut = '';for (let info of document.querySelector('.spe').querySelectorAll('span')) { if (info.textContent.includes('Statut')) { statut = info.textContent.split(': ')[1]; } else if (info.textContent.includes('Sortie')) { sortie = info.textContent.split(': ')[1]; } else if (info.textContent.includes('Genre')) { genres = Array.from(info.querySelectorAll('a')).map(g => g.textContent); }}var chapters = Array.from(document.querySelectorAll('.lchx.mobile > a')).map(chap => new Chapter(chap.textContent.trim(), new ModuleRequest(chap.href, 'get', emptyKeyValue, null), false));chapters.reverse();const infoPageObject = new Info(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(false, false, ''), new Output(image, title, parsedJson.request, desc, genres, sortie, statut, 'Scans: ' + chapters.length, '', chapters));savedData.innerHTML = JSON.stringify(infoPageObject);"
      },
      "output": {
        "image": {
          "url": "",
          "method": "get",
          "headers": [],
          "httpBody": null
        },
        "link": {
          "url": "",
          "method": "get",
          "headers": [],
          "httpBody": null
        },
        "title": "",
        "description": "",
        "genres": [],
        "field1": "",
        "field2": "",
        "field3": "",
        "field4": "",
        "chapters": []
      }
    }
  ],
  "chapters": [
    {
      "request": {
        "url": "",
        "method": "get",
        "headers": [],
        "httpBody": null
      },
      "extra": {
        "commands": [],
        "extraInfo": []
      },
      "javascriptConfig": {
        "removeJavascript": true,
        "loadInWebView": false,
        "javaScript": "function Chapters(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output( videos, images, text) { this.videos = videos; this.images = images; this.text = text;} var savedData = document.getElementById('ketsu-final-data');const parsedJson = JSON.parse(savedData.innerHTML);const emptyKeyValue = [new KeyValue('', '')];const imgsHeaders = [new KeyValue('Referer', parsedJson.request.url)];var output = [];var url = parsedJson.request.url.split('-vf')[0].replace('scan-', 'scans/');const nbChap = url.split('-').slice(-1)[0];url = url.replace('-'+nbChap, '/'+nbChap);for (nbPage in Array.from(document.querySelectorAll('#page-list option'))) { let img = `${url}/${parseInt(nbPage)+1}.jpg`; output.push(new ModuleRequest(img,'get',imgsHeaders,null));}const chaptersPageObject = new Chapters(new ModuleRequest('', '', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(true, false, ''), new Output(null, output, null));savedData.innerHTML = JSON.stringify(chaptersPageObject);"
      },
      "output": {
        "videos": {
          "needsResolver": [],
          "rawVideo": []
        },
        "images": [],
        "text": { "text": "" }
      }
    }
  ],
  "moduleResolvers": [],
  "responseCodeFunctions": [],
  "helperFunctions": []
}