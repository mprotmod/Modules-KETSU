{
    "moduleInfo": {
        "moduleName": "Aniwatch",
        "moduleInitials": "AW",
        "moduleDesc": "Module for aniwatch (ex-zoro), subs are now supported on newer versions of Ketsu",
        "developer": "ナビル",
        "moduleID": "114653268923213246",
        "moduleImage": "https://i.postimg.cc/jSP7Srhr/zoro-gif.gif",
        "moduleVersion": 2.15,
        "moduleLenguage": "ENG",
        "searchPlaceHolder": "If you want to search for a random anime, just type 'random'",
        "changelog": "2.15 - Fixed the megacloud resolver",
        "moduleType": "Video",
        "baseURL": "https://aniwatch.to/",
        "moduleDeveloperSite": "https://bilnaa.github.io/main/",
        "UpdateSite": "https://raw.githubusercontent.com/mprotmod/Modules-KETSU/main/Module%20Parser%20KETSU/Zoro.to/moduleTemplate.json",
        "preferedServer": "MEGACLOUD",
        "preferedDownloadServer": "MEGACLOUD",
        "blackListed": [""],
        "moduleCreatorIdJNDjSvRFRiorSWgBagab": {
            "path": "oxKdw",
            "id": "moduleInfosection",
            "sectionsHidden": [],
            "options": {
                "name": "Module Info",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdbdPLcIAmNwtGqhIoaIcA": {
            "path": "wfoFI",
            "id": "moduleInfocell",
            "sectionsHidden": [],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        }
    },
    "global": {
        "variables": [{
            "key": "",
            "value": ""
        }],
        "cookies": [{
            "key": "",
            "value": ""
        }],
        "headers": [{
            "key": "",
            "value": ""
        }]
    },
    "mainPage": [{
        "request": {
            "url": "https://aniwatch.to/home/",
            "method": "get",
            "headers": [{
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "LoadText",
                "value": "False"
            }]
        },
        "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */      const DefaultLayouts = {\n    ultraWideFull: 'ultraWideFull',\n    ultraWide: 'ultraWide',\n    wideFull: 'wideFull',\n    wide: 'wide',\n    wideStrechedFull: 'wideStrechedFull',\n    wideStrechedFullDouble: 'WideStrechedFullDouble',\n    wideStreched: 'wideStreched',\n    wideStrechedDouble: 'wideStrechedDouble',\n    wideStrechedFullList: 'wideStrechedFullList',\n    wideStrechedList: 'wideStrechedList',\n    doublets: 'doublets',\n    doubletsDouble: 'doubletsDouble',\n    doubletsFull: 'doubletsFull',\n    doubletsFullDouble: 'doubletsFullDouble',\n    doubletsConstant: 'doubletsConstant',\n    doubletsDoubleConstant: 'doubletsDoubleConstant',\n    doubletsFullConstant: 'doubletsFullConstant',\n    doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',\n    longDoublets: 'longDoublets',\n    longDoubletsDouble: 'longDoubletsDouble',\n    longDoubletsFull: 'longDoubletsFull',\n    longDoubletsFullDouble: 'longDoubletsFullDouble',\n    longDoubletsConstant: 'longDoubletsConstant',\n    longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',\n    longDoubletsFullConstant: 'longDoubletsFullConstant',\n    longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',\n    triplets: 'triplets',\n    tripletsDouble: 'tripletsDouble',\n    tripletsFull: 'tripletsFull',\n    tripletsFullDouble: 'tripletsFullDouble',\n    tripletsConstant: 'tripletsConstant',\n    tripletsDoubleConstant: 'tripletsDoubleConstant',\n    tripletsFullConstant: 'tripletsFullConstant',\n    tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',\n    longTriplets: 'longTriplets',\n    longTripletsDouble: 'longTripletsDouble',\n    longTripletsFull: 'longTripletsFull',\n    longTripletsFullDouble: 'longTripletsFullDouble',\n    longTripletsConstant: 'longTripletsConstant',\n    longTripletsDoubleConstant: 'longTripletsDoubleConstant',\n    longTripletsFullConstant: 'longTripletsFullConstant',\n    longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',\n    none: ''\n};\nconst CellDesings = {\n    Special1: 'Special1',\n    Special2: 'Special2',\n    Special3: 'Special3',\n    CELLHelperText: 'CELLHelperText',\n    small1: 'small1',\n    small2: 'small2',\n    normal1: 'normal1',\n    normal2: 'normal2',\n    normal3: 'normal3',\n    normal4: 'normal4',\n    normal5: 'normal5',\n    normal6: 'normal6',\n    normal7: 'normal7',\n    wide1: 'wide1',\n    wide2: 'wide2',\n    wide3: 'wide3',\n    wide4: 'wide4',\n    wide5: 'wide5',\n    wide6: 'wide6',\n    wide7: 'wide7',\n    wide8: 'wide8',\n    wide9: 'wide9',\n    wide10: 'wide10',\n    wide11: 'wide11'\n};\nconst Paging = {\n    leading: 'leading',\n    centered: 'centered',\n    none: ''\n};\nconst Orientation = {\n    horizontal: 'horizontal',\n    vertical: 'vertical'\n};\n\nfunction MainPage ( request, extra, javascriptConfig, output ) {\n    this.request = request;\n    this.extra = extra;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest ( url, method, headers, httpBody ) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra ( commands, extraInfo ) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands ( commandName, params ) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue ( key, value ) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output ( cellDesing, orientation, defaultLayout, paging, section, layout, data ) {\n    this.cellDesing = cellDesing;\n    this.orientation = orientation;\n    this.defaultLayout = defaultLayout;\n    this.paging = paging;\n    this.section = section;\n    this.layout = layout;\n    this.data = data;\n}\n\nfunction Section ( sectionName, separator ) {\n    this.sectionName = sectionName;\n    this.separator = separator;\n}\n\nfunction Layout ( insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing ) {\n    this.insets = insets;\n    this.visibleCellsWidthS = visibleCellsWidthS;\n    this.visibleCellsWidthM = visibleCellsWidthM;\n    this.visibleCellsWidthL = visibleCellsWidthL;\n    this.visibleCellsHeight = visibleCellsHeight;\n    this.heightForVisibleCells = heightForVisibleCells;\n    this.cellSize = cellSize;\n    this.ratio = ratio;\n    this.constant = constant;\n    this.horizontalSpacing = horizontalSpacing;\n    this.verticalSpacing = verticalSpacing;\n}\n\nfunction Insets ( top, bottom, left, right ) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n}\n\nfunction Size ( width, height ) {\n    this.width = width;\n    this.height = height;\n}\n\nfunction Ratio ( inRelation, number1, number2 ) {\n    this.inRelation = inRelation;\n    this.number1 = number1;\n    this.number2 = number2;\n}\n\nfunction Data ( image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView ) {\n    this.image = image;\n    this.title = title;\n    this.description = description;\n    this.field1 = field1;\n    this.field2 = field2;\n    this.field3 = field3;\n    this.field4 = field4;\n    this.isChapter = isChapter;\n    this.link = link;\n    this.openInWebView = openInWebView;\n}\n\nfunction shuffle ( a ) {\n    var j, x, i;\n    for ( i = a.length - 1; i > 0; i-- ) {\n            j = Math.floor( Math.random( ) * ( i + 1 ) );\n            x = a[ i ];\n            a[ i ] = a[ j ];\n            a[ j ] = x;\n    }\n    return a;\n}\nvar savedData = document.getElementById( 'ketsu-final-data' );\nvar parsedJson = JSON.parse( savedData.innerHTML );\nlet emptyKeyValue = [ new KeyValue( '', '' ) ];\nlet emptyKeyValue1 = [ new KeyValue( 'X-Requested-With', 'XMLHttpRequest' ) ];\nvar LoadText = parsedJson.extra.extraInfo[ 0 ].value;\nconst dummyQuest = new ModuleRequest( '', 'get', emptyKeyValue, null );\nconst streamta = new ModuleRequest( 'ketsuapp://?moduleData=https://raw.githubusercontent.com/Bilnaa/beta-ketsu/main/zoro.json', 'get', emptyKeyValue, null );\nconst infoText = new Data( dummyQuest, \"Subs are only available on newer versions of Ketsu, on the Rapid-Cloud resolver and won't work if you have the App Store version.\\nClick on this message if you are using the App Store version of KETSU and not getting subtitles. If you do so don't forget to refresh this page.\", '', '', '', '', '', false, streamta, false );\nlet output = [ ];\nvar sliderArray = [ ];\nvar slider = document.querySelectorAll( '#slider .swiper-wrapper .swiper-slide' );\nfor ( let slide of slider ) {\n    let title = slide.querySelector( 'img' ).alt;\n    let image = slide.querySelector( 'img' ).dataset.src;\n    image = new ModuleRequest( image, 'get', emptyKeyValue, '' );\n    let link = 'https://aniwatch.to' + slide.querySelector( '.btn.btn-secondary.btn-radius' ).href;\n    link = new ModuleRequest( link, 'get', emptyKeyValue, '' );\n    let description = slide.querySelector( '.desi-depion' ).innerText;\n    let type = slide.querySelector( 'div.sc-detail > div:nth-child(1)' ).innerText;\n    let date = 'First Aired : ' + slide.querySelector( '.scd-item.m-hide' ).innerText;\n    sliderArray.push( new Data( image, title + ' ' + type, description, title, date, '', '', false, link ) );\n}\nvar TopAiring = [ ];\nvar best = document.querySelectorAll( '#anime-featured > div > div > div > div:nth-child(1) > div > div.anif-block-ul > ul li' );\nfor ( let list of best ) {\n    try {\n        let title = list.querySelector( 'img' ).alt;\n        let link = 'https://aniwatch.to' + list.querySelector( 'a' ).href;\n        link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n        let image = list.querySelector( 'img' ).dataset.src;\n        image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n        let ep = list.querySelector( '.tick-item.tick-sub' ).textContent.trim( );\n        let language = '??';\n        try {\n                language = list.querySelector( 'span:nth-child(1)' ).textContent.trim( );\n        } catch (e) {\n            console.log(e)\n        }\n    TopAiring.push( new Data( image, title, '', ep, language, '', '', false, link ) );\n    } catch(e){\n        console.log(e)\n    }\n}\nvar LastEpisodes = [ ];\nvar last = document.querySelectorAll( '#main-content > section:nth-child(2) > div.tab-content > div > div.film_list-wrap div.flw-item' );\nfor ( let list of last ) {\n    try {\n        let ticks =  list.querySelectorAll('.tick .tick-item');\n    let title = list.querySelector( 'img' ).alt;\n    let link = 'https://aniwatch.to' + list.querySelector( 'a' ).href;\n    link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n    let image = list.querySelector( 'img' ).dataset.src;\n    image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n    let epTotal = '';\n    epTotal = list.querySelector('.tick-item.tick-eps');\n    if(!epTotal){\n          epTotal =  ticks[0].textContent;\n    } else {\n        epTotal = epTotal.textContent.trim();\n    }\n    let ep = `${ticks[0].textContent.trim()}/${epTotal}`;\n    let language = '';\n    for(let i = 0; i<ticks.length; i++){\n        if(ticks.length > 1 && ticks[i].classList.contains('tick-sub') && ticks[i+1].classList.contains('tick-dub')){\n            language = 'SUB/DUB';\n            break;\n        } else if(ticks[i].classList.contains('tick-sub')){\n            language = 'SUB';\n            break;\n        } else if(ticks[i].classList.contains('tick-dub')){\n            language = 'DUB';\n            break;\n        }\n    }\n    LastEpisodes.push( new Data( image, title, 'test1', ep, language, 'test2', 'test3', false, link ) );\n    }catch(e){\n        console.log(e)\n    }\n    \n}\nvar NewAnimes = [ ];\nvar newanimes = document.querySelectorAll( '#main-content > section:nth-child(5) div.film_list-wrap div.flw-item' );\nfor ( let list of newanimes ) {\n    try {\n        let ticks =  list.querySelectorAll('.tick.ltr .tick-item');\n    let title = list.querySelector( 'img' ).alt;\n    let link = 'https://aniwatch.to/' + list.querySelector( 'a' ).href;\n    link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n    let image = list.querySelector( 'img' ).dataset.src;\n    image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n    let epTotal = '';\n    epTotal = list.querySelector('.tick-item.tick-eps');\n    if(!epTotal){\n          epTotal =  ticks[0].textContent.trim();\n    } else {\n        epTotal = epTotal.textContent.trim();\n    }\n    let ep = ``;\n    if(epTotal== ''){\n        ep = `${ticks[0].textContent.trim()}`\n    } else {\n        ep = `${ticks[0].textContent.trim()}/${epTotal}`\n    }\n    let language = '';\n    for(let i = 0; i<ticks.length; i++){\n        if(ticks.length > 1 && ticks[i].classList.contains('tick-sub') && ticks[i+1].classList.contains('tick-dub')){\n            language = 'SUB/DUB';\n            break;\n        } else if(ticks[i].classList.contains('tick-sub')){\n            language = 'SUB';\n            break;\n        } else if(ticks[i].classList.contains('tick-dub')){\n            language = 'DUB';\n            break;\n        }\n    }\n    NewAnimes.push( new Data( image, title, '', ep, language, '', '', false, link ) );\n    } catch(e){\n        console.log(e)\n    }\n    \n}\nlet MostViewed = [ ];\nvar mostviewed = document.querySelectorAll( '#top-viewed-week > ul > li' );\nfor ( let list of mostviewed ) {\n    try {\n        let title = list.querySelector( 'img' ).alt;\n    let link = 'https://aniwatch.to/' + list.querySelector( 'a' ).href;\n    link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n    let image = list.querySelector( 'img' ).dataset.src;\n    image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n    let views = '??';\n    let viewCount = list.querySelector( '.fdi-item');\n    if(viewCount){\n        views = viewCount.textContent.trim();\n    }\n    MostViewed.push( new Data( image, title, '', views, '', '', '', false, link ) );\n    }catch(e){\n        console.log(e)\n    }\n}\nlet layout = new Layout( new Insets( 0, 0, 0, 0 ), 1, 1, 1, 1, 0, new Size( 400, 105 ), new Ratio( 'width', 4, 10 ), new Size( 0, 0 ), 0, 0 );\nlet layout1 = new Layout( new Insets( 0, 0, 10, 10 ), 1, 1, 1, 1, 0, new Size( 400, 105 ), new Ratio( 'width', 4, 10 ), new Size( 0, 0 ), 0, 0 );\noutput.push( new Output( CellDesings.Special3, Orientation.horizontal, DefaultLayouts.wideStrechedFull, Paging.leading, new Section( '', true ), layout, shuffle( sliderArray ) ) );\nif ( LoadText == 'True' ) {\n    output.push( new Output( 'CELLHelperText', Orientation.horizontal, DefaultLayouts.wideFull, Paging.centered, new Section( '', true ), layout1, [ infoText ] ) );\n}\noutput.push( new Output( CellDesings.Special1, Orientation.horizontal, DefaultLayouts.triplets, Paging.none, new Section( 'Top Airing : ', true ), null, TopAiring ) );\noutput.push( new Output( CellDesings.normal1, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.leading, new Section( 'Last Episodes: ', true ), null, LastEpisodes ) );\noutput.push( new Output( CellDesings.wide6, Orientation.horizontal, DefaultLayouts.longDoubletsFull, Paging.none, new Section( 'New On Aniwatch', true ), null, NewAnimes ) );\noutput.push( new Output( CellDesings.normal2, Orientation.horizontal, DefaultLayouts.longTripletsDouble, Paging.none, new Section( 'Most Viewed Animes', true ), null, MostViewed ) );\nlet date = new Date( );\nlet year = date.getFullYear( );\nlet day = date.getDate( );\nlet month = date.getMonth( ) + 1;\nlet timezoneOffset = date.getTimezoneOffset( );\nif ( month < 10 ) {\n    month = '0' + month;\n}\nif ( day < 10 ) {\n    day = '' + '0' + day\n}\nlet nextRequest = `https://aniwatch.to/ajax/schedule/list?tzOffset=${timezoneOffset}&date=${year}-${month}-${day}`;\nlet MainPageObject = new MainPage( new ModuleRequest( nextRequest, 'get', emptyKeyValue1, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), new JavascriptConfig( true, false, '' ), output );\nlet finalJson = JSON.stringify( MainPageObject );\nsavedData.innerHTML = finalJson;\n      /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "",
                    "method": "",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdfTodgKWnHDxeyNehjvZE": {
            "path": "MqWHq",
            "id": "mainPage,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "openedMenu": "Request",
            "openedRequestMenu": "Headers",
            "javascriptEditorScroll": 73
        }
    }, {
        "request": {
            "url": "",
            "method": "get",
            "headers": [{
                "key": "",
                "value": ""
            }],
            "httpBody": null
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: '' }; const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11' }; const Paging = { leading: 'leading', centered: 'centered', none: '' }; const Orientation = { horizontal: 'horizontal', vertical: 'vertical' }; function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output; } function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody; } function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo; } function Commands(commandName, params) { this.commandName = commandName; this.params = params; } function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript; } function KeyValue(key, value) { this.key = key; this.value = value; } function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data; } function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator; } function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing; } function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right; } function Size(width, height) { this.width = width; this.height = height; } function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2; } function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView; } function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a; } function checkTime() { var now = new Date(); var hour = now.getHours(); var minute = now.getMinutes(); var second = now.getSeconds(); var time = hour + ':' + minute; return time; } function getDaysInMonth(month, year) { return new Date(year, month, 0).getDate(); } var savedData = document.getElementById('ketsu-final-data'); var parsedJson = JSON.parse(savedData.innerHTML); let emptyKeyValue = [new KeyValue('', '')]; let emptyKeyValue1 = [new KeyValue('X-Requested-With', 'XMLHttpRequest')]; let output = parsedJson.output; var script = document.querySelector('script').innerText.replace('*/', '').replace('/*', ''); var json = JSON.parse(script).html; var nextRequest = ''; var schedule = []; var htmldom = new DOMParser().parseFromString(json, 'text/html'); var content = htmldom.querySelectorAll('li'); var actualtime = checkTime(); for (anime of content) { var link = 'https://aniwatch.to' + anime.querySelector('a').getAttribute('href'); link = new ModuleRequest(link, 'get', emptyKeyValue, null); var dummyQuest = new ModuleRequest('', 'get', emptyKeyValue, null); var episode = anime.querySelector('.fd-play').innerText.trim(); var time = anime.querySelector('.time').innerText.trim(); if ((parseInt(time.split(':')[0]) > parseInt(actualtime.split(':')[0])) || ((parseInt(time.split(':')[0]) == parseInt(actualtime.split(':')[0])) && (parseInt(time.split(':')[1]) > parseInt(actualtime.split(':')[1])))) { console.log('not aired yet'); var title = time + ' - ' + anime.querySelector('h3').innerText.trim() + ' ' + episode; schedule.push(new Data(dummyQuest, title, '', '', '', '', '', false, link, false)); } } var testLayout = new Layout(new Insets(0, 0, 10, 10), 1, 2, 3, 6, 300, new Size(0, 0), null, new Size(0, 0), 0, 0); if (schedule.length == 0) { var date = new Date(); var year = date.getFullYear(); var day = date.getDate(); var month = date.getMonth() + 1; var daysinmonth = getDaysInMonth(month, year); var timezoneOffset = date.getTimezoneOffset(); if (month < 10) { month = '0' + month; } var nextDay = day + 1; if (nextDay > daysinmonth) { nextDay = '01'; month = month + 1; if (month > 12) { month = '01'; year = year + 1; } }else{ nextDay = day + 1; }; if (nextDay < 10) { nextDay = ''+'0' + nextDay } ;var nextRequest = `https://aniwatch.to/ajax/schedule/list?tzOffset=${timezoneOffset}&date=${year}-${month}-${nextDay}`; } else { output.push(new Output(CellDesings.small2, Orientation.vertical, DefaultLayouts.none, Paging.leading, new Section('Airs Today', true), testLayout, schedule)); } let MainPageObject = new MainPage(new ModuleRequest(nextRequest, 'get', emptyKeyValue1, null), new Extra([ new Commands('', emptyKeyValue) ], emptyKeyValue), new JavascriptConfig(true, false, ''), output); var finalJson = JSON.stringify(MainPageObject); savedData.innerHTML = finalJson;        /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "",
                    "method": "",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdEeUzalXOKrstKukdZpWP": {
            "path": "rzamQ",
            "id": "mainPage,1cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false
        }
    }, {
        "request": {
            "url": "",
            "method": "get",
            "headers": [{
                "key": "",
                "value": ""
            }],
            "httpBody": null
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         const DefaultLayouts = { ultraWideFull: 'ultraWideFull', ultraWide: 'ultraWide', wideFull: 'wideFull', wide: 'wide', wideStrechedFull: 'wideStrechedFull', wideStrechedFullDouble: 'WideStrechedFullDouble', wideStreched: 'wideStreched', wideStrechedDouble: 'wideStrechedDouble', wideStrechedFullList: 'wideStrechedFullList', wideStrechedList: 'wideStrechedList', doublets: 'doublets', doubletsDouble: 'doubletsDouble', doubletsFull: 'doubletsFull', doubletsFullDouble: 'doubletsFullDouble', doubletsConstant: 'doubletsConstant', doubletsDoubleConstant: 'doubletsDoubleConstant', doubletsFullConstant: 'doubletsFullConstant', doubletsFullDoubleConstant: 'doubletsFullDoubleConstant', longDoublets: 'longDoublets', longDoubletsDouble: 'longDoubletsDouble', longDoubletsFull: 'longDoubletsFull', longDoubletsFullDouble: 'longDoubletsFullDouble', longDoubletsConstant: 'longDoubletsConstant', longDoubletsDoubleConstant: 'longDoubletsDoubleConstant', longDoubletsFullConstant: 'longDoubletsFullConstant', longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant', triplets: 'triplets', tripletsDouble: 'tripletsDouble', tripletsFull: 'tripletsFull', tripletsFullDouble: 'tripletsFullDouble', tripletsConstant: 'tripletsConstant', tripletsDoubleConstant: 'tripletsDoubleConstant', tripletsFullConstant: 'tripletsFullConstant', tripletsFullDoubleConstant: 'tripletsFullDoubleConstant', longTriplets: 'longTriplets', longTripletsDouble: 'longTripletsDouble', longTripletsFull: 'longTripletsFull', longTripletsFullDouble: 'longTripletsFullDouble', longTripletsConstant: 'longTripletsConstant', longTripletsDoubleConstant: 'longTripletsDoubleConstant', longTripletsFullConstant: 'longTripletsFullConstant', longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant', none: ''};const CellDesings = { Special1: 'Special1', Special2: 'Special2', Special3: 'Special3', CELLHelperText: 'CELLHelperText', small1: 'small1', small2: 'small2', normal1: 'normal1', normal2: 'normal2', normal3: 'normal3', normal4: 'normal4', normal5: 'normal5', normal6: 'normal6', normal7: 'normal7', wide1: 'wide1', wide2: 'wide2', wide3: 'wide3', wide4: 'wide4', wide5: 'wide5', wide6: 'wide6', wide7: 'wide7', wide8: 'wide8', wide9: 'wide9', wide10: 'wide10', wide11: 'wide11'};const Paging = { leading: 'leading', centered: 'centered', none: ''};const Orientation = { horizontal: 'horizontal', vertical: 'vertical'};function MainPage(request, extra, javascriptConfig, output) { this.request = request; this.extra = extra; this.javascriptConfig = javascriptConfig; this.output = output;}function ModuleRequest(url, method, headers, httpBody) { this.url = url; this.method = method; this.headers = headers; this.httpBody = httpBody;}function Extra(commands, extraInfo) { this.commands = commands; this.extraInfo = extraInfo;}function Commands(commandName, params) { this.commandName = commandName; this.params = params;}function JavascriptConfig(removeJavascript, loadInWebView, javaScript) { this.removeJavascript = removeJavascript; this.loadInWebView = loadInWebView; this.javaScript = javaScript;}function KeyValue(key, value) { this.key = key; this.value = value;}function Output(cellDesing, orientation, defaultLayout, paging, section, layout, data) { this.cellDesing = cellDesing; this.orientation = orientation; this.defaultLayout = defaultLayout; this.paging = paging; this.section = section; this.layout = layout; this.data = data;}function Section(sectionName, separator) { this.sectionName = sectionName; this.separator = separator;}function Layout(insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing) { this.insets = insets; this.visibleCellsWidthS = visibleCellsWidthS; this.visibleCellsWidthM = visibleCellsWidthM; this.visibleCellsWidthL = visibleCellsWidthL; this.visibleCellsHeight = visibleCellsHeight; this.heightForVisibleCells = heightForVisibleCells; this.cellSize = cellSize; this.ratio = ratio; this.constant = constant; this.horizontalSpacing = horizontalSpacing; this.verticalSpacing = verticalSpacing;}function Insets(top, bottom, left, right) { this.top = top; this.bottom = bottom; this.left = left; this.right = right;}function Size(width, height) { this.width = width; this.height = height;}function Ratio(inRelation, number1, number2) { this.inRelation = inRelation; this.number1 = number1; this.number2 = number2;}function Data(image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView) { this.image = image; this.title = title; this.description = description; this.field1 = field1; this.field2 = field2; this.field3 = field3; this.field4 = field4; this.isChapter = isChapter; this.link = link; this.openInWebView = openInWebView;}function shuffle(a) { var j, x, i; for (i = a.length - 1; i > 0; i--) { j = Math.floor(Math.random() * (i + 1)); x = a[i]; a[i] = a[j]; a[j] = x; } return a;}var savedData = document.getElementById('ketsu-final-data');var parsedJson = JSON.parse(savedData.innerHTML);let emptyKeyValue = [new KeyValue('', '')]; let emptyKeyValue1 = [new KeyValue('X-Requested-With', 'XMLHttpRequest')]; let output = parsedJson.output;var script = document.querySelector('script').innerText.replace('*/', '').replace('/*', '');var json = JSON.parse(script).html;var schedule = [];var htmldom = new DOMParser().parseFromString(json, 'text/html');var content = htmldom.querySelectorAll('li');for (anime of content) { var link = 'https://aniwatch.to' + anime.querySelector('a').getAttribute('href'); link = new ModuleRequest(link, 'get', emptyKeyValue, null); var dummyQuest = new ModuleRequest('', 'get', emptyKeyValue, null); var episode = anime.querySelector('.fd-play').innerText.trim(); var time = anime.querySelector('.time').innerText.trim(); var title = time + ' - ' + anime.querySelector('h3').innerText.trim() + ' ' + episode; schedule.push(new Data(dummyQuest, title, '', '', '', '', '', false, link, false));}var testLayout = new Layout(new Insets(0, 0, 10, 10), 1, 2, 3, 6, 300, new Size(0, 0), null, new Size(0, 0), 0, 0);output.push(new Output(CellDesings.small2, Orientation.vertical, DefaultLayouts.none, Paging.leading, new Section('Airs Tomorrow', true), testLayout, schedule));let MainPageObject = new MainPage(new ModuleRequest('', 'get', emptyKeyValue, null), new Extra([new Commands('', emptyKeyValue)], emptyKeyValue), new JavascriptConfig(true, false, ''), output);var finalJson = JSON.stringify(MainPageObject);savedData.innerHTML = finalJson;        /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "",
                    "method": "",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdYuYvSXXjQfxkgwEWDebd": {
            "path": "MrlhA",
            "id": "mainPage,2cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false
        }
    }],
    "search": [{
        "request": {
            "url": "https://aniwatch.to/search?keyword=<searched>&page=<page>",
            "method": "get",
            "headers": [{
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "separator": "%20",
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */       const DefaultLayouts = {\n    ultraWideFull: 'ultraWideFull',\n    ultraWide: 'ultraWide',\n    wideFull: 'wideFull',\n    wide: 'wide',\n    wideStrechedFull: 'wideStrechedFull',\n    wideStrechedFullDouble: 'WideStrechedFullDouble',\n    wideStreched: 'wideStreched',\n    wideStrechedDouble: 'wideStrechedDouble',\n    wideStrechedFullList: 'wideStrechedFullList',\n    wideStrechedList: 'wideStrechedList',\n    doublets: 'doublets',\n    doubletsDouble: 'doubletsDouble',\n    doubletsFull: 'doubletsFull',\n    doubletsFullDouble: 'doubletsFullDouble',\n    doubletsConstant: 'doubletsConstant',\n    doubletsDoubleConstant: 'doubletsDoubleConstant',\n    doubletsFullConstant: 'doubletsFullConstant',\n    doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',\n    longDoublets: 'longDoublets',\n    longDoubletsDouble: 'longDoubletsDouble',\n    longDoubletsFull: 'longDoubletsFull',\n    longDoubletsFullDouble: 'longDoubletsFullDouble',\n    longDoubletsConstant: 'longDoubletsConstant',\n    longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',\n    longDoubletsFullConstant: 'longDoubletsFullConstant',\n    longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',\n    triplets: 'triplets',\n    tripletsDouble: 'tripletsDouble',\n    tripletsFull: 'tripletsFull',\n    tripletsFullDouble: 'tripletsFullDouble',\n    tripletsConstant: 'tripletsConstant',\n    tripletsDoubleConstant: 'tripletsDoubleConstant',\n    tripletsFullConstant: 'tripletsFullConstant',\n    tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',\n    longTriplets: 'longTriplets',\n    longTripletsDouble: 'longTripletsDouble',\n    longTripletsFull: 'longTripletsFull',\n    longTripletsFullDouble: 'longTripletsFullDouble',\n    longTripletsConstant: 'longTripletsConstant',\n    longTripletsDoubleConstant: 'longTripletsDoubleConstant',\n    longTripletsFullConstant: 'longTripletsFullConstant',\n    longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',\n    none: ''\n};\nconst CellDesings = {\n    Special1: 'Special1',\n    Special2: 'Special2',\n    Special3: 'Special3',\n    CELLHelperText: 'CELLHelperText',\n    small1: 'small1',\n    small2: 'small2',\n    normal1: 'normal1',\n    normal2: 'normal2',\n    normal3: 'normal3',\n    normal4: 'normal4',\n    normal5: 'normal5',\n    normal6: 'normal6',\n    normal7: 'normal7',\n    wide1: 'wide1',\n    wide2: 'wide2',\n    wide3: 'wide3',\n    wide4: 'wide4',\n    wide5: 'wide5',\n    wide6: 'wide6',\n    wide7: 'wide7',\n    wide8: 'wide8',\n    wide9: 'wide9',\n    wide10: 'wide10',\n    wide11: 'wide11'\n};\nconst Paging = {\n    leading: 'leading',\n    centered: 'centered',\n    none: ''\n};\nconst Orientation = {\n    horizontal: 'horizontal',\n    vertical: 'vertical'\n};\n\nfunction Search ( request, extra, separator, javascriptConfig, output ) {\n    this.request = request;\n    this.extra = extra;\n    this.separator = separator;\n    this.javascriptConfig = javascriptConfig;\n    this.output = output;\n}\n\nfunction ModuleRequest ( url, method, headers, httpBody ) {\n    this.url = url;\n    this.method = method;\n    this.headers = headers;\n    this.httpBody = httpBody;\n}\n\nfunction Extra ( commands, extraInfo ) {\n    this.commands = commands;\n    this.extraInfo = extraInfo;\n}\n\nfunction Commands ( commandName, params ) {\n    this.commandName = commandName;\n    this.params = params;\n}\n\nfunction JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n    this.removeJavascript = removeJavascript;\n    this.loadInWebView = loadInWebView;\n    this.javaScript = javaScript;\n}\n\nfunction KeyValue ( key, value ) {\n    this.key = key;\n    this.value = value;\n}\n\nfunction Output ( cellDesing, orientation, defaultLayout, paging, section, layout, data ) {\n    this.cellDesing = cellDesing;\n    this.orientation = orientation;\n    this.defaultLayout = defaultLayout;\n    this.paging = paging;\n    this.section = section;\n    this.layout = layout;\n    this.data = data;\n}\n\nfunction Section ( sectionName, separator ) {\n    this.sectionName = sectionName;\n    this.separator = separator;\n}\n\nfunction Layout ( insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing ) {\n    this.insets = insets;\n    this.visibleCellsWidthS = visibleCellsWidthS;\n    this.visibleCellsWidthM = visibleCellsWidthM;\n    this.visibleCellsWidthL = visibleCellsWidthL;\n    this.visibleCellsHeight = visibleCellsHeight;\n    this.heightForVisibleCells = heightForVisibleCells;\n    this.cellSize = cellSize;\n    this.ratio = ratio;\n    this.constant = constant;\n    this.horizontalSpacing = horizontalSpacing;\n    this.verticalSpacing = verticalSpacing;\n}\n\nfunction Insets ( top, bottom, left, right ) {\n    this.top = top;\n    this.bottom = bottom;\n    this.left = left;\n    this.right = right;\n}\n\nfunction Size ( width, height ) {\n    this.width = width;\n    this.height = height;\n}\n\nfunction Ratio ( inRelation, number1, number2 ) {\n    this.inRelation = inRelation;\n    this.number1 = number1;\n    this.number2 = number2;\n}\n\nfunction Data ( image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView ) {\n    this.image = image;\n    this.title = title;\n    this.description = description;\n    this.field1 = field1;\n    this.field2 = field2;\n    this.field3 = field3;\n    this.field4 = field4;\n    this.isChapter = isChapter;\n    this.link = link;\n    this.openInWebView = openInWebView;\n}\n\nfunction quickData ( link, image, title, field1 ) {\n    return new Data( image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link, false );\n}\n\nfunction shuffle ( a ) {\n    var j, x, i;\n    for ( i = a.length - 1; i > 0; i-- ) {\n            j = Math.floor( Math.random( ) * ( i + 1 ) );\n            x = a[ i ];\n            a[ i ] = a[ j ];\n            a[ j ] = x;\n    }\n    return a;\n}\nvar savedData = document.getElementById( 'ketsu-final-data' );\nvar parsedJson = JSON.parse( savedData.innerHTML );\nlet output = [ ];\nlet emptyKeyValue = [ new KeyValue( '', '' ) ];\nlet nextRequest = '';\nlet searchArray = [ ];\nif ( !parsedJson.request.url.split( 'keyword=' )[ 1 ].includes( 'random' ) ) {\n    let shorts = document.querySelectorAll( '.film_list-wrap .flw-item' );\n    for ( let short of shorts ) {\n            let image = short.querySelector( 'img' ).dataset.src;\n            image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n            let title = short.querySelector( 'img' ).alt;\n            let nbEp = '';\n            let nbEpDub = '';\n            if (short.querySelector( '.tick-item.tick-eps' ) != null) {\n                nbEpDub = short.querySelector( '.tick-item.tick-eps' ).textContent.trim();\n            }\n            if(short.querySelector( '.tick-item.tick-sub' ) != null){\n                nbEp = short.querySelector( '.tick-item.tick-sub' ).textContent.trim();\n            }\n            let type = '';\n            let field1 = '';\n            if (nbEpDub != '') {\n                field1 = nbEp + ' subbed episodes | ' + nbEpDub + ' dubbed episodes';\n                type = 'SUB/DUB'\n            } else if(nbEpDub == '') {\n                field1 = nbEp;\n                if(parseInt(nbEp) > 1 ){\n                  field1 += ' episodes'\n                } else {\n                  field1 += ' episode';\n                }\n                type = 'SUB'\n            } else {\n                field1 = nbEpDub;\n                if(parseInt(nbEpDub) > 1 ){\n                    field1 += ' Episodes'\n                  } else {\n                    field1 += ' Episode';\n                  }\n                type = 'DUB'\n            }\n            let link = 'https://aniwatch.to/' + short.querySelector( 'a' ).href;\n            link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n            searchArray.push( new Data( image, title,field1 + ' ' + type , '', type, '', '', false, link ) );\n    }\n    var testLayout = new Layout( new Insets( 10, 10, 10, 10 ), 1, 2, 3, 1, 500, new Size( 400, 400 ), new Ratio( 'width', 4, 11 ), new Size( 0, 0 ), 10, 10 );\n    output.push( new Output( CellDesings.wide8, Orientation.vertical, DefaultLayouts.none, Paging.none, new Section( '', true ), testLayout, searchArray ) );\n} else {\n    nextRequest = 'https://aniwatch.to/random';\n}\nlet searchPageObject = new Search( new ModuleRequest( nextRequest, 'get', emptyKeyValue, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), '', new JavascriptConfig( true, false, '' ), output );\nvar finalJson = JSON.stringify( searchPageObject );\nsavedData.innerHTML = finalJson;\n       /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdZMfmBQNHwOWXVUqQQHeN": {
            "path": "bgsng",
            "id": "search,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "openedRequestMenu": "Headers",
            "openedMenu": "Javascript",
            "javascriptEditorScroll": 232
        }
    }, {
        "request": {
            "url": "",
            "method": "get",
            "headers": [{
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "separator": "%20",
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         const DefaultLayouts = {\n          ultraWideFull: 'ultraWideFull',\n          ultraWide: 'ultraWide',\n          wideFull: 'wideFull',\n          wide: 'wide',\n          wideStrechedFull: 'wideStrechedFull',\n          wideStrechedFullDouble: 'WideStrechedFullDouble',\n          wideStreched: 'wideStreched',\n          wideStrechedDouble: 'wideStrechedDouble',\n          wideStrechedFullList: 'wideStrechedFullList',\n          wideStrechedList: 'wideStrechedList',\n          doublets: 'doublets',\n          doubletsDouble: 'doubletsDouble',\n          doubletsFull: 'doubletsFull',\n          doubletsFullDouble: 'doubletsFullDouble',\n          doubletsConstant: 'doubletsConstant',\n          doubletsDoubleConstant: 'doubletsDoubleConstant',\n          doubletsFullConstant: 'doubletsFullConstant',\n          doubletsFullDoubleConstant: 'doubletsFullDoubleConstant',\n          longDoublets: 'longDoublets',\n          longDoubletsDouble: 'longDoubletsDouble',\n          longDoubletsFull: 'longDoubletsFull',\n          longDoubletsFullDouble: 'longDoubletsFullDouble',\n          longDoubletsConstant: 'longDoubletsConstant',\n          longDoubletsDoubleConstant: 'longDoubletsDoubleConstant',\n          longDoubletsFullConstant: 'longDoubletsFullConstant',\n          longDoubletsFullDoubleConstant: 'longDoubletsFullDoubleConstant',\n          triplets: 'triplets',\n          tripletsDouble: 'tripletsDouble',\n          tripletsFull: 'tripletsFull',\n          tripletsFullDouble: 'tripletsFullDouble',\n          tripletsConstant: 'tripletsConstant',\n          tripletsDoubleConstant: 'tripletsDoubleConstant',\n          tripletsFullConstant: 'tripletsFullConstant',\n          tripletsFullDoubleConstant: 'tripletsFullDoubleConstant',\n          longTriplets: 'longTriplets',\n          longTripletsDouble: 'longTripletsDouble',\n          longTripletsFull: 'longTripletsFull',\n          longTripletsFullDouble: 'longTripletsFullDouble',\n          longTripletsConstant: 'longTripletsConstant',\n          longTripletsDoubleConstant: 'longTripletsDoubleConstant',\n          longTripletsFullConstant: 'longTripletsFullConstant',\n          longTripletsFullDoubleConstant: 'longTripletsFullDoubleConstant',\n          none: ''\n  };\n  const CellDesings = {\n          Special1: 'Special1',\n          Special2: 'Special2',\n          Special3: 'Special3',\n          CELLHelperText: 'CELLHelperText',\n          small1: 'small1',\n          small2: 'small2',\n          normal1: 'normal1',\n          normal2: 'normal2',\n          normal3: 'normal3',\n          normal4: 'normal4',\n          normal5: 'normal5',\n          normal6: 'normal6',\n          normal7: 'normal7',\n          wide1: 'wide1',\n          wide2: 'wide2',\n          wide3: 'wide3',\n          wide4: 'wide4',\n          wide5: 'wide5',\n          wide6: 'wide6',\n          wide7: 'wide7',\n          wide8: 'wide8',\n          wide9: 'wide9',\n          wide10: 'wide10',\n          wide11: 'wide11'\n  };\n  const Paging = {\n          leading: 'leading',\n          centered: 'centered',\n          none: ''\n  };\n  const Orientation = {\n          horizontal: 'horizontal',\n          vertical: 'vertical'\n  };\n\n  function Search ( request, extra, separator, javascriptConfig, output ) {\n          this.request = request;\n          this.extra = extra;\n          this.separator = separator;\n          this.javascriptConfig = javascriptConfig;\n          this.output = output;\n  }\n\n  function ModuleRequest ( url, method, headers, httpBody ) {\n          this.url = url;\n          this.method = method;\n          this.headers = headers;\n          this.httpBody = httpBody;\n  }\n\n  function Extra ( commands, extraInfo ) {\n          this.commands = commands;\n          this.extraInfo = extraInfo;\n  }\n\n  function Commands ( commandName, params ) {\n          this.commandName = commandName;\n          this.params = params;\n  }\n\n  function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n          this.removeJavascript = removeJavascript;\n          this.loadInWebView = loadInWebView;\n          this.javaScript = javaScript;\n  }\n\n  function KeyValue ( key, value ) {\n          this.key = key;\n          this.value = value;\n  }\n\n  function Output ( cellDesing, orientation, defaultLayout, paging, section, layout, data ) {\n          this.cellDesing = cellDesing;\n          this.orientation = orientation;\n          this.defaultLayout = defaultLayout;\n          this.paging = paging;\n          this.section = section;\n          this.layout = layout;\n          this.data = data;\n  }\n\n  function Section ( sectionName, separator ) {\n          this.sectionName = sectionName;\n          this.separator = separator;\n  }\n\n  function Layout ( insets, visibleCellsWidthS, visibleCellsWidthM, visibleCellsWidthL, visibleCellsHeight, heightForVisibleCells, cellSize, ratio, constant, horizontalSpacing, verticalSpacing ) {\n          this.insets = insets;\n          this.visibleCellsWidthS = visibleCellsWidthS;\n          this.visibleCellsWidthM = visibleCellsWidthM;\n          this.visibleCellsWidthL = visibleCellsWidthL;\n          this.visibleCellsHeight = visibleCellsHeight;\n          this.heightForVisibleCells = heightForVisibleCells;\n          this.cellSize = cellSize;\n          this.ratio = ratio;\n          this.constant = constant;\n          this.horizontalSpacing = horizontalSpacing;\n          this.verticalSpacing = verticalSpacing;\n  }\n\n  function Insets ( top, bottom, left, right ) {\n          this.top = top;\n          this.bottom = bottom;\n          this.left = left;\n          this.right = right;\n  }\n\n  function Size ( width, height ) {\n          this.width = width;\n          this.height = height;\n  }\n\n  function Ratio ( inRelation, number1, number2 ) {\n          this.inRelation = inRelation;\n          this.number1 = number1;\n          this.number2 = number2;\n  }\n\n  function Data ( image, title, description, field1, field2, field3, field4, isChapter, link, openInWebView ) {\n          this.image = image;\n          this.title = title;\n          this.description = description;\n          this.field1 = field1;\n          this.field2 = field2;\n          this.field3 = field3;\n          this.field4 = field4;\n          this.isChapter = isChapter;\n          this.link = link;\n          this.openInWebView = openInWebView;\n  }\n\n  function quickData ( link, image, title, field1 ) {\n          return new Data( image, title, 'unknown', field1, 'unknown', 'unknown', 'unknown', false, link );\n  }\n\n  function shuffle ( a ) {\n          var j, x, i;\n          for ( i = a.length - 1; i > 0; i-- ) {\n                  j = Math.floor( Math.random( ) * ( i + 1 ) );\n                  x = a[ i ];\n                  a[ i ] = a[ j ];\n                  a[ j ] = x;\n          }\n          return a;\n  }\n  var savedData = document.getElementById( 'ketsu-final-data' );\n  var parsedJson = JSON.parse( savedData.innerHTML );\n  let output = [ ];\n  let emptyKeyValue = [ new KeyValue( '', '' ) ];\n  var anime = [ ];\n  var image = document.querySelector( '.film-poster img' ).src;\n  image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n  if ( document.querySelector( '.anisc-detail h2' ).textContent != document.querySelector( '.anisc-detail h2' ).dataset.jname ) {\n          var title = document.querySelector( '.anisc-detail h2' ).textContent + '/' + document.querySelector( '.anisc-detail h2' ).dataset.jname\n  } else {\n          var title = document.querySelector( '.anisc-detail h2' ).dataset.jname\n  };\n  var desc = '';\n  try {\n          desc = document.querySelector( '.text' ).innerText.replaceAll( '\\n', ' ' ).trim( ).replaceAll( '\\n', ' ' ).trim( );\n  } catch {\n          desc = document.querySelector( '.text' ).innerText.trim( );\n  }\n  var link = 'https://aniwatch.to/' + document.querySelector( '.btn.btn-radius.btn-primary.btn-play' ).href.replace( '/watch/', '' );\n  link = new ModuleRequest( link, 'get', emptyKeyValue, null );\n  try {\n          var field1 = document.querySelector( '#ani_detail > div > div > div.anis-content > div.anisc-detail > div.film-stats' ).innerText.trim( ).replaceAll( '\\n', ' ' )\n  } catch ( e ) {\n          var field1 = document.querySelector( '#ani_detail > div > div > div.anis-content > div.anisc-detail > div.film-stats' ).innerText.trim( )\n  };\n  if ( field1.includes( 'TV' ) ) {\n          var field2 = 'TV';\n  } else if ( field1.includes( 'Movie' ) ) {\n          var field2 = 'Movie'\n  } else {\n          var field2 = 'Unknown'\n  };\n  anime.push( new Data( image, title, desc, field1, field2, '', '', false, link, false ) );\n  output.push( new Output( CellDesings.wide11, Orientation.horizontal, DefaultLayouts.wideFull, Paging.leading, new Section( '', true ), null, anime ) );;\n  let searchPageObject = new Search( new ModuleRequest( '', 'get', emptyKeyValue, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), '', new JavascriptConfig( true, false, '' ), output );\n  var finalJson = JSON.stringify( searchPageObject );\n  savedData.innerHTML = finalJson;\n       /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": [{
            "cellDesing": "normal1",
            "orientation": "vertical",
            "defaultLayout": "wide",
            "paging": "",
            "section": {
                "sectionName": "",
                "separator": false
            },
            "layout": {
                "insets": {
                    "top": 0,
                    "bottom": 0,
                    "left": 0,
                    "right": 0
                },
                "visibleCellsWidthS": 2,
                "visibleCellsWidthM": 2,
                "visibleCellsWidthL": 2,
                "visibleCellsHeight": 2,
                "heightForVisibleCells": 400,
                "cellSize": {
                    "width": 300,
                    "height": 300
                },
                "ratio": {
                    "inRelation": "width",
                    "number1": 1,
                    "number2": 2
                },
                "constant": {
                    "width": 1,
                    "height": 2
                },
                "horizontalSpacing": 0,
                "verticalSpacing": 0
            },
            "data": [{
                "image": {
                    "url": "",
                    "method": "get",
                    "headers": [{
                        "key": "",
                        "value": ""
                    }],
                    "httpBody": null
                },
                "title": "",
                "description": "",
                "field1": "",
                "field2": "",
                "field3": "",
                "field4": "",
                "openInWebView": false,
                "isChapter": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        }],
        "moduleCreatorIdKzVDRbAVYhFdvJIWMRzu": {
            "path": "xgalJ",
            "id": "search,1cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 0
        }
    }],
    "info": [{
        "request": {
            "url": "https://aniwatch.to/classroom-for-heroes-18485",
            "method": "get",
            "headers": [{
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         function Info ( request, extra, javascriptConfig, output ) {\n              this.request = request;\n              this.extra = extra;\n              this.javascriptConfig = javascriptConfig;\n              this.output = output;\n      }\n\n      function ModuleRequest ( url, method, headers, httpBody ) {\n              this.url = url;\n              this.method = method;\n              this.headers = headers;\n              this.httpBody = httpBody;\n      }\n\n      function Extra ( commands, extraInfo ) {\n              this.commands = commands;\n              this.extraInfo = extraInfo;\n      }\n\n      function Commands ( commandName, params ) {\n              this.commandName = commandName;\n              this.params = params;\n      }\n\n      function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n              this.removeJavascript = removeJavascript;\n              this.loadInWebView = loadInWebView;\n              this.javaScript = javaScript;\n      }\n\n      function KeyValue ( key, value ) {\n              this.key = key;\n              this.value = value;\n      }\n\n      function Chapter ( chapName, link, openInWebView ) {\n              this.chapName = chapName;\n              this.link = link;\n              this.openInWebView = openInWebView;\n      }\n\n      function Output ( image, title, link, description, genres, field1, field2, field3, field4, chapters ) {\n              this.image = image;\n              this.link = link;\n              this.title = title;\n              this.description = description;\n              this.genres = genres;\n              this.field1 = field1;\n              this.field2 = field2;\n              this.field3 = field3;\n              this.field4 = field4;\n              this.chapters = chapters;\n      }\n      var savedData = document.getElementById( 'ketsu-final-data' ) || document.body.querySelector('div');\n      var parsedJson = JSON.parse( savedData.innerHTML );\n      let emptyKeyValue = [ new KeyValue( 'Referer', parsedJson.request.url ), new KeyValue( 'X-Requested-With', 'XMLHttpRequest' ) ];\n      var airing;\n      var status;\n      var image = document.querySelector( '.film-poster img' ).src;\n      image = new ModuleRequest( image, 'get', emptyKeyValue, null );\n      if ( document.querySelector( '.anisc-detail h2' ).textContent != document.querySelector( '.anisc-detail h2' ).dataset.jname ) {\n              var title = document.querySelector( '.anisc-detail h2' ).textContent + '/' + document.querySelector( '.anisc-detail h2' ).dataset.jname\n      } else {\n              var title = document.querySelector( '.anisc-detail h2' ).dataset.jname\n      };\n      var desc = '';\n      try {\n              desc = document.querySelector( 'div.anis-content > div.anisc-detail > div.film-depion.m-hide > div' ).textContent.trim( );\n      } catch ( e ) {\n              desc = document.querySelector( '.anisc-info' ).textContent.trim( );\n      }\n      var animeinfo = document.querySelector( 'div.anisc-info-wrap > div.anisc-info' );\n      for ( var x = 0; x < animeinfo.children.length; x++ ) {\n              if ( animeinfo.children[ x ].textContent.trim( ).includes( 'Status' ) ) {\n                      var status = animeinfo.children[ x ].textContent.split( 'Status:' )[ 1 ].trim( );\n              } else if ( animeinfo.children[ x ].textContent.trim( ).includes( 'Aired' ) ) {\n                      var airing = animeinfo.children[ x ].textContent.split( 'Aired:' )[ 1 ].trim( );\n              }\n      }\n      var genres = Array.from( document.querySelectorAll( '.item.item-list a' ) ).map( g => g.textContent );\n      var type = 'Anime';\n      var episodes = [ ];\n      var json = document.querySelector( '#wrapper' ).dataset.id;\n      var nextRequest = `https://aniwatch.to/ajax/v2/episode/list/${json}`;\n      let infoPageObject = new Info( new ModuleRequest( nextRequest, 'get', emptyKeyValue, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), new JavascriptConfig( false, false, '' ), new Output( image, title, parsedJson.request, desc, genres, status, airing, type, 'Eps: ' + episodes.length, episodes ) );\n      var finalJson = JSON.stringify( infoPageObject );\n      savedData.innerHTML = finalJson;\n   /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "image": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "link": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "title": "",
            "description": "",
            "genres": [""],
            "field1": "",
            "field2": "",
            "field3": "",
            "field4": "",
            "chapters": [{
                "chapName": "",
                "openInWebView": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        },
        "moduleCreatorIdBtXsgUTzQtrjucgCwhKf": {
            "path": "wKPvZ",
            "id": "info,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "openedMenu": "Javascript",
            "javascriptEditorScroll": 73
        }
    }, {
        "request": {
            "url": "",
            "method": "get",
            "headers": [{
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */        function Info ( request, extra, javascriptConfig, output ) {\n             this.request = request;\n             this.extra = extra;\n             this.javascriptConfig = javascriptConfig;\n             this.output = output;\n     }\n\n     function ModuleRequest ( url, method, headers, httpBody ) {\n             this.url = url;\n             this.method = method;\n             this.headers = headers;\n             this.httpBody = httpBody;\n     }\n\n     function Extra ( commands, extraInfo ) {\n             this.commands = commands;\n             this.extraInfo = extraInfo;\n     }\n\n     function Commands ( commandName, params ) {\n             this.commandName = commandName;\n             this.params = params;\n     }\n\n     function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n             this.removeJavascript = removeJavascript;\n             this.loadInWebView = loadInWebView;\n             this.javaScript = javaScript;\n     }\n\n     function KeyValue ( key, value ) {\n             this.key = key;\n             this.value = value;\n     }\n\n     function Chapter ( chapName, link, openInWebView ) {\n             this.chapName = chapName;\n             this.link = link;\n             this.openInWebView = openInWebView;\n     }\n\n     function Output ( image, title, link, description, genres, field1, field2, field3, field4, chapters ) {\n             this.image = image;\n             this.link = link;\n             this.title = title;\n             this.description = description;\n             this.genres = genres;\n             this.field1 = field1;\n             this.field2 = field2;\n             this.field3 = field3;\n             this.field4 = field4;\n             this.chapters = chapters;\n     }\n     var savedData = document.getElementById( 'ketsu-final-data' ) || document.body.querySelector('div');\n     var parsedJson = JSON.parse( savedData.innerText );\n     let emptyKeyValue = [ new KeyValue( 'Referer', 'https://aniwatch.to' ), new KeyValue( 'X-Requested-With', 'XMLHttpRequest' ) ];\n     var image = parsedJson.output.image;\n     var title = parsedJson.output.title;\n     var desc = parsedJson.output.description;\n     var genres = parsedJson.output.genres;\n     var type = '';\n     var episodes = [ ];\n     var script = document.querySelector( 'script' ).innerText.replace( '*/', '' ).replace( '/*', '' );\n     var html = JSON.parse( script ).html;\n     var parser = new DOMParser( );\n     var doc = parser.parseFromString( html, 'text/html' );\n     var animes = doc.querySelectorAll( '.ss-list a' );\n     for ( var x = 0; x < animes.length; x++ ) {\n             var anime = animes[ x ];\n             var link = 'https://aniwatch.to/ajax/v2/episode/servers?episodeId=' + anime.dataset.id;\n             var name = anime.title;\n             if ( !name.includes( 'Episode' ) ) {\n                     name = `${x+1} : ` + name;\n             }\n             let chapter = new Chapter( name, new ModuleRequest( link, 'get', emptyKeyValue, null ), false );\n             episodes.push( chapter );\n     }\n     parsedJson.request.url = parsedJson.output.link.url;\n     parsedJson.request.headers = [ new KeyValue( '', '' ) ];\n     let infoPageObject = new Info( new ModuleRequest( '', '', emptyKeyValue, null ), new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue ), new JavascriptConfig( false, false, '' ), new Output( image, title, parsedJson.request, desc, genres, parsedJson.output.field1, parsedJson.output.field2, type, 'Eps: ' + episodes.length, episodes ) );\n     var finalJson = JSON.stringify( infoPageObject );\n     savedData.innerText = finalJson;\n   /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "image": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "link": {
                "url": "",
                "method": "get",
                "headers": [{
                    "key": "",
                    "value": ""
                }],
                "httpBody": null
            },
            "title": "",
            "description": "",
            "genres": [""],
            "field1": "",
            "field2": "",
            "field3": "",
            "field4": "",
            "chapters": [{
                "chapName": "",
                "openInWebView": false,
                "link": {
                    "url": "empty",
                    "method": "get",
                    "headers": [{
                        "key": "key",
                        "value": "value"
                    }],
                    "httpBody": null
                }
            }]
        },
        "moduleCreatorIdVfFgzzOkPmGlLojnLBWZ": {
            "path": "FXVvF",
            "id": "info,1cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 73,
            "openedMenu": "Javascript"
        }
    }],
    "chapters": [{
        "request": {
            "url": "https://aniwatch.to/ajax/v2/episode/servers?episodeId=103008",
            "method": "get",
            "headers": [{
                "key": "key",
                "value": "value",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": true,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         function Chapters ( request, extra, javascriptConfig, output ) {\n              this.request = request;\n              this.extra = extra;\n              this.javascriptConfig = javascriptConfig;\n              this.output = output;\n      }\n\n      function ModuleRequest ( url, method, headers, httpBody ) {\n              this.url = url;\n              this.method = method;\n              this.headers = headers;\n              this.httpBody = httpBody;\n      }\n\n      function Extra ( commands, extraInfo ) {\n              this.commands = commands;\n              this.extraInfo = extraInfo;\n      }\n\n      function Commands ( commandName, params ) {\n              this.commandName = commandName;\n              this.params = params;\n      }\n\n      function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n              this.removeJavascript = removeJavascript;\n              this.loadInWebView = loadInWebView;\n              this.javaScript = javaScript;\n      }\n\n      function KeyValue ( key, value ) {\n              this.key = key;\n              this.value = value;\n      }\n\n      function Output ( videos, images, text ) {\n              this.videos = videos;\n              this.images = images;\n              this.text = text;\n      }\n\n      function Videos ( needsResolver, rawVideo ) {\n              this.needsResolver = needsResolver;\n              this.rawVideo = rawVideo;\n      }\n\n      function NeedsResolver ( resolverIdentifier, link ) {\n              this.resolverIdentifier = resolverIdentifier;\n              this.link = link;\n      }\n\n      function RawVideo ( video ) {\n              this.video = video;\n      }\n\n      function Video ( videoQuality, videoLink ) {\n              this.videoQuality = videoQuality;\n              this.videoLink = videoLink;\n      }\n      var savedData = document.getElementById( 'ketsu-final-data' );\n      var parsedJson = JSON.parse( savedData.innerHTML );\n      var extraInfo = parsedJson.extra.extraInfo;\n      var emptyKeyValue = [ new KeyValue( 'X-Requested-With', 'XMLHttpRequest' ) ];\n      var output = [ ];\n      const script = document.querySelector( 'script' ).innerHTML.replace( '/*', '' ).replace( '*/', '' );\n      const data = JSON.parse( script );\n      const html = data.html;\n      const htmlObject = document.createElement( 'div' );\n      htmlObject.innerHTML = html;\n      document.body.appendChild( htmlObject );\n      var extraInfo = [ new KeyValue( 'count', '0' ) ];\n      var links = document.querySelectorAll( '.item.server-item' );\n      for ( var x = 0; x < links.length; x++ ) {\n              var link = links[ x ];\n              var id = link.dataset.id;\n              var lang = link.dataset.type;\n              var url = 'https://aniwatch.to/ajax/v2/episode/sources?id=' + id + '&lang=' + lang;\n              if ( x == 0 ) {\n                      var nextRequest = url\n              } else {\n                      extraInfo.push( new KeyValue( `${x}`, `${url}` ) );\n              }\n              console.log( url );\n      }\n      let emptyExtra = new Extra( [ new Commands( '', emptyKeyValue ) ], extraInfo );\n      var chaptersObject = new Chapters( new ModuleRequest( nextRequest, 'get', emptyKeyValue, null ), emptyExtra, new JavascriptConfig( false, false, '' ), new Output( new Videos( [ ], [ ] ), null, null ) );\n      var finalJson = JSON.stringify( chaptersObject );\n      savedData.innerHTML = finalJson;\n   /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "videos": {
                "needsResolver": [{
                    "resolverIdentifier": "",
                    "link": {
                        "url": "",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }],
                "rawVideo": [{
                    "video": [{
                        "videoQuality": "",
                        "videoLink": {
                            "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                            "method": "get",
                            "headers": [{
                                "key": "key",
                                "value": "value"
                            }],
                            "httpBody": null
                        }
                    }]
                }]
            },
            "images": [{
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value"
                }],
                "httpBody": null
            }],
            "text": {
                "text": ""
            }
        },
        "moduleCreatorIdAcLPCPhyMLVrzKJkKJpm": {
            "path": "vcHHY",
            "id": "chapters,0cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 70,
            "openedMenu": "Request"
        }
    }, {
        "request": {
            "url": "",
            "method": "get",
            "headers": [{
                "key": "key",
                "value": "value",
                "moduleCreatorHeaderisActive": true
            }, {
                "key": "",
                "value": "",
                "moduleCreatorHeaderisActive": true
            }]
        },
        "extra": {
            "commands": [{
                "commandName": "",
                "params": [{
                    "key": "",
                    "value": ""
                }]
            }],
            "extraInfo": [{
                "key": "",
                "value": ""
            }]
        },
        "javascriptConfig": {
            "removeJavascript": false,
            "loadInWebView": false,
            "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */        function Chapters ( request, extra, javascriptConfig, output ) {\n             this.request = request;\n             this.extra = extra;\n             this.javascriptConfig = javascriptConfig;\n             this.output = output;\n     }\n\n     function ModuleRequest ( url, method, headers, httpBody ) {\n             this.url = url;\n             this.method = method;\n             this.headers = headers;\n             this.httpBody = httpBody;\n     }\n\n     function Extra ( commands, extraInfo ) {\n             this.commands = commands;\n             this.extraInfo = extraInfo;\n     }\n\n     function Commands ( commandName, params ) {\n             this.commandName = commandName;\n             this.params = params;\n     }\n\n     function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n             this.removeJavascript = removeJavascript;\n             this.loadInWebView = loadInWebView;\n             this.javaScript = javaScript;\n     }\n\n     function KeyValue ( key, value ) {\n             this.key = key;\n             this.value = value;\n     }\n\n     function Output ( videos, images, text ) {\n             this.videos = videos;\n             this.images = images;\n             this.text = text;\n     }\n\n     function Videos ( needsResolver, rawVideo ) {\n             this.needsResolver = needsResolver;\n             this.rawVideo = rawVideo;\n     }\n\n     function NeedsResolver ( resolverIdentifier, link ) {\n             this.resolverIdentifier = resolverIdentifier;\n             this.link = link;\n     }\n\n     function RawVideo ( video ) {\n             this.video = video;\n     }\n\n     function Video ( videoQuality, videoLink ) {\n             this.videoQuality = videoQuality;\n             this.videoLink = videoLink;\n     }\n\n     function getValueFromKey ( keys, key ) {\n             for ( var x = 0; x < keys.length; x++ ) {\n                     let tKey = keys[ x ];\n                     if ( tKey.key == key ) {\n                             return tKey.value;\n                     }\n             }\n     }\n     var savedData = document.getElementById( 'ketsu-final-data' );\n     var parsedJson = JSON.parse( savedData.innerHTML );\n     var extraInfo = parsedJson.extra.extraInfo;\n     var emptyKeyValue = [ new KeyValue( 'X-Requested-With', 'XMLHttpRequest' ) ];\n     var emptyHeader = [ new KeyValue( 'Referer', 'https://aniwatch.to' ) ];\n     var output = parsedJson.output.videos;;\n     var actualCount = getValueFromKey( extraInfo, 'count' );\n     var nextCount = parseInt( actualCount.match( /\\d+/g )[ 0 ] ) + 1;\n     var nextRequest = getValueFromKey( extraInfo, nextCount );\n     if ( actualCount == 0 ) {\n             output = new Videos( [ ], [ ] );\n     }\n     const script = document.querySelector( 'script' ).innerHTML.replace( '/*', '' ).replace( '*/', '' );\n     const data = JSON.parse( script );\n     data.link = data.link.replace( '?vast=1', '' );\n     if ( data.link.includes( 'streamtape.com' ) ) {\n             var fixedLink = data.link.replace( 'https://streamtape.com/', 'https://streamta.pe/' );\n             if ( parsedJson.request.url.includes( 'lang=dub' ) ) {\n                     output.needsResolver.push( new NeedsResolver( 'STREAMTA DUB', new ModuleRequest( fixedLink, 'get', emptyHeader, null ) ) );\n             } else {\n                     output.needsResolver.push( new NeedsResolver( '', new ModuleRequest( fixedLink, 'get', emptyHeader, null ) ) );\n             }\n     }\n     if ( parsedJson.request.url.includes( 'lang=dub' ) && !data.link.includes( 'streamtape.com' ) ) {\n             resolver = data.link.split( '/' )[ 2 ].split( '.' )[ 0 ].toUpperCase( );\n             output.needsResolver.push( new NeedsResolver( resolver + ' DUB', new ModuleRequest( data.link, 'get', emptyHeader, null ) ) );\n     } else if ( data.link.includes( 'streamtape' ) ) {} else {\n             output.needsResolver.push( new NeedsResolver( '', new ModuleRequest( data.link, 'get', emptyHeader, null ) ) );\n     }\n     extraInfo[ 0 ].value = '' + ( parseInt( actualCount ) + 1 );\n     if ( nextRequest == undefined ) {\n             nextRequest = '';\n     }\n     let emptyExtra = new Extra( [ new Commands( '', emptyKeyValue ) ], extraInfo );\n     var chaptersObject = new Chapters( new ModuleRequest( nextRequest, 'get', emptyKeyValue, null ), emptyExtra, new JavascriptConfig( false, false, '' ), new Output( output, null, null ) );\n     var finalJson = JSON.stringify( chaptersObject );\n     savedData.innerHTML = finalJson;\n   /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
        },
        "output": {
            "videos": {
                "needsResolver": [{
                    "resolverIdentifier": "",
                    "link": {
                        "url": "",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }],
                "rawVideo": [{
                    "video": [{
                        "videoQuality": "",
                        "videoLink": {
                            "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                            "method": "get",
                            "headers": [{
                                "key": "key",
                                "value": "value"
                            }],
                            "httpBody": null
                        }
                    }]
                }]
            },
            "images": [{
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value"
                }],
                "httpBody": null
            }],
            "text": {
                "text": ""
            }
        },
        "moduleCreatorIdgtjcFnmqqwPJxDmMzrou": {
            "path": "MbxvY",
            "id": "chapters,1cell",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false,
            "javascriptEditorScroll": 106,
            "openedMenu": "Javascript"
        }
    }],
    "moduleResolvers": [{
        "resolverInfo": {
            "resolverName": "STREAMTA",
            "nameMatches": ["STREAMTA", "STREAMTA DUB"],
            "developer": "ナビル",
            "moduleID": "8465132120",
            "resolverVersion": 1.6,
            "baseURL": "",
            "moduleCreatorIdzSxRyOiacvfQfzGRfFWr": {
                "path": "VDQem",
                "id": "moduleResolvers,0,resolverInfosection",
                "sectionsHidden": ["moduleCreatorIdyxClljcKHDoKwwLfMAXh"],
                "options": {
                    "name": "Resolver Parameters",
                    "listName": "parameters"
                },
                "cellsHidden": false
            },
            "moduleCreatorIdjvdcuVFPbQzmLlntwbrL": {
                "path": "THtBv",
                "id": "moduleResolvers,0,resolverInfocell",
                "sectionsHidden": ["moduleCreatorIdyxClljcKHDoKwwLfMAXh"],
                "options": {
                    "name": "parameters"
                },
                "cellsHidden": false
            }
        },
        "resolver": [{
            "request": {
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */        function Resolver ( request, extra, javascriptConfig, output ) {\n            this.request = request;\n            this.extra = extra;\n            this.javascriptConfig = javascriptConfig;\n            this.output = output;\n    }\n\n    function ModuleRequest ( url, method, headers, httpBody ) {\n            this.url = url;\n            this.method = method;\n            this.headers = headers;\n            this.httpBody = httpBody;\n    }\n\n    function Extra ( commands, extraInfo ) {\n            this.commands = commands;\n            this.extraInfo = extraInfo;\n    }\n\n    function Commands ( commandName, params ) {\n            this.commandName = commandName;\n            this.params = params;\n    }\n\n    function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n            this.removeJavascript = removeJavascript;\n            this.loadInWebView = loadInWebView;\n            this.javaScript = javaScript;\n    }\n\n    function KeyValue ( key, value ) {\n            this.key = key;\n            this.value = value;\n    }\n\n    function Output ( video ) {\n            this.video = video;\n    }\n\n    function Video ( videoQuality, videoLink ) {\n            this.videoQuality = videoQuality;\n            this.videoLink = videoLink;\n    }\n\n    function getNext ( match, array ) {\n            for ( var x = 0; x < array.length; x++ ) {\n                    let mMatch = array[ x ];\n                    if ( mMatch.includes( match ) ) {\n                            return array[ x + 1 ];\n                    }\n            }\n    }\n    var savedData = document.getElementById( 'ketsu-final-data' );\n    var parsedJson = JSON.parse( savedData.innerHTML );\n    var emptyKeyValue = [ new KeyValue( 'Referer', parsedJson.request.url ) ];\n    var videos = [ ];\n    let playerRegex = /innerHTML\\s=\\s*\"([^\"]+)\"\\s?\\+\\s?''\\+\\s?\\('([^']+)/;\n    let body = document.body.innerText;\n    let playerMatch = playerRegex.exec( body );\n    if ( playerMatch ) {\n            let matchedLink = playerMatch[ 2 ];\n            let index = matchedLink.indexOf( '?' );\n            if ( index == -1 ) {\n                    try {\n                            firstpart = playerMatch[ 1 ].split( '=' )[ 1 ].replace( '\"', '' );\n                            secondpart = playerMatch[ 2 ].substr( 5 );\n                            secondtry = playerMatch[ 2 ].substr( 4 );\n                            let videoLink = 'https://streamta.pe/get_video?id=' + firstpart + secondpart + '&stream=1';\n                            let fixedLink = 'https://streamta.pe/get_video?id=' + firstpart + secondtry + '&stream=1';\n                            console.log( videoLink, fixedLink );\n                            videos.push( new Video( 'THAI GUY WAS HERE', new ModuleRequest( fixedLink, 'get', emptyKeyValue, null ) ) );\n                            videos.push( new Video( 'Normal', new ModuleRequest( videoLink, 'get', emptyKeyValue, null ) ) );\n                    } catch ( e ) {}\n                    try {\n                            if ( matchedLink.match( /^=/ ) ) {\n                                    let videoLink = 'https://streamta.pe/get_video?id=' + matchedLink.substr( 5 ) + '&stream=1';\n                                    if ( videoLink.includes( 'id==' ) ) {\n                                            videoLink = videoLink.replace( 'id==', 'id=' );\n                                    }\n                                    console.log( videoLink );\n                                    videos.push( new Video( 'Normal', new ModuleRequest( videoLink, 'get', emptyKeyValue, null ) ) );\n                            }\n                    } catch ( e ) {}\n                    try {\n                            if ( matchedLink.match( /id=/ ) ) {\n                                    split = matchedLink.split( 'id=' );\n                                    let videoLink = 'https://streamta.pe/get_video?id=' + split[ 1 ] + '&stream=1';\n                                    console.log( videoLink );\n                                    videos.push( new Video( 'Normal', new ModuleRequest( videoLink, 'get', emptyKeyValue, null ) ) );\n                            }\n                    } catch ( e ) {}\n                    try {\n                            if ( matchedLink.match( /^([a-zA-Z]+d=)/ ) ) {\n                                    split = matchedLink.split( 'd=' );\n                                    let videoLink = 'https://streamta.pe/get_video?id=' + split[ 1 ] + '&stream=1';\n                                    console.log( videoLink );\n                                    videos.push( new Video( 'Normal', new ModuleRequest( videoLink, 'get', emptyKeyValue, null ) ) );\n                            }\n                    } catch ( e ) {}\n            } else {\n                    let videoLink = `https://streamta.pe/get_video${matchedLink.substr(index)}&stream=1`;\n                    console.log( videoLink );\n                    videos.push( new Video( 'Normal', new ModuleRequest( videoLink, 'get', emptyKeyValue, null ) ) );\n            }\n    }\n    let emptyExtra = new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue );\n    var chaptersObject = new Resolver( new ModuleRequest( '', '', emptyKeyValue, null ), emptyExtra, new JavascriptConfig( false, false, '' ), new Output( videos ) );\n    var finalJson = JSON.stringify( chaptersObject );\n    savedData.innerHTML = finalJson;\n    /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "234234823",
                "video": [{
                    "videoQuality": "720",
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIddQYBQrdsjoafXkbzqoGB": {
                "path": "cHcMK",
                "id": "moduleResolvers,0,resolver,0cell",
                "sectionsHidden": ["moduleCreatorIdyxClljcKHDoKwwLfMAXh"],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "javascriptEditorScroll": 43
            }
        }],
        "moduleCreatorIdyxClljcKHDoKwwLfMAXh": {
            "path": "OZvQL",
            "id": "moduleResolvers,0section",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver"
            },
            "cellsHidden": true
        },
        "moduleCreatorIdDwtRTSakDwhxpXQuWTeu": {
            "path": "resolver",
            "id": "moduleResolvers,0,resolversection",
            "sectionsHidden": ["moduleCreatorIdyxClljcKHDoKwwLfMAXh"],
            "options": {
                "name": "Resolver Request",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }, {
        "resolverInfo": {
            "resolverName": "VidCloud",
            "nameMatches": ["RAPID-CLOUD", "RAPID-CLOUD DUB", "MEGACLOUD", "MEGACLOUD DUB"],
            "developer": "ナビル",
            "moduleID": "rapidcloud",
            "resolverVersion": 1.08,
            "baseURL": "https://rapid-cloud.ru/",
            "moduleCreatorIdMWafgCAtwrbjviOpbjii": {
                "path": "FTgwj",
                "id": "moduleResolvers,1,resolverInfosection",
                "sectionsHidden": [],
                "options": {
                    "name": "Resolver Parameters",
                    "listName": "parameters"
                },
                "cellsHidden": false
            },
            "moduleCreatorIdZTrVLEjfPfbpMOQBbuxz": {
                "path": "VBvaT",
                "id": "moduleResolvers,1,resolverInfocell",
                "sectionsHidden": [],
                "options": {
                    "name": "parameters"
                },
                "cellsHidden": false
            }
        },
        "resolver": [{
            "request": {
                "url": "https://megacloud.tv/embed-2/e-1/juBmKKVsySkF",
                "method": "get",
                "headers": [{
                    "key": "Referer",
                    "value": "https://megacloud.tv/embed-2/e-1/juBmKKVsySkF",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": false
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": false,
                "loadInWebView": true,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */  var script = document.createElement('script');\nscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js';\ndocument.head.appendChild(script);\nscript.addEventListener('load', function () {\n    function Resolver(request, extra, javascriptConfig, output) {\n        this.request = request;\n        this.extra = extra;\n        this.javascriptConfig = javascriptConfig;\n        this.output = output;\n    }\n\n    function ModuleRequest(url, method, headers, httpBody) {\n        this.url = url;\n        this.method = method;\n        this.headers = headers;\n        this.httpBody = httpBody;\n    }\n\n    function Extra(commands, extraInfo) {\n        this.commands = commands;\n        this.extraInfo = extraInfo;\n    }\n\n    function Commands(commandName, params) {\n        this.commandName = commandName;\n        this.params = params;\n    }\n\n    function JavascriptConfig(removeJavascript, loadInWebView, javaScript) {\n        this.removeJavascript = removeJavascript;\n        this.loadInWebView = loadInWebView;\n        this.javaScript = javaScript;\n    }\n\n    function KeyValue(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n\n    function Output(video, subs) {\n        this.video = video;\n        this.subs = subs;\n    }\n\n    function Video(videoQuality, videoLink) {\n        this.videoQuality = videoQuality;\n        this.videoLink = videoLink;\n    }\n\n    function VideoSub(language, link) {\n        this.language = language;\n        this.link = link;\n    }\n\n    function getNext(match, array) {\n        for (var x = 0; x < array.length; x++) {\n            let mMatch = array[x];\n            if (mMatch.includes(match)) {\n                return array[x + 1];\n            }\n        }\n    }\n\n    function getValueFromKey(keys, key) {\n        for (var x = 0; x < keys.length; x++) {\n            let tKey = keys[x];\n            if (tKey.key == key) {\n                return tKey.value;\n            }\n        }\n    }\n\n    function getFile(url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, false);\n        request.send(null);\n        if (request.status === 200) {\n            return request.responseText;\n        } else {\n            return null;\n        }\n    }\n\n    function extractAndConcatenateString(originalString, stops) {\n        let decryptedKey = '';\n        let offset = 0;\n        let encryptedString = originalString\n    \n        for (const i in stops) {\n            const start = stops[i][0];\n            const end = stops[i][1];\n            decryptedKey += encryptedString.slice(\n                start - offset,\n                end - offset\n            )\n    \n            encryptedString = encryptedString.slice(0, start - offset) + encryptedString.slice(end - offset);\n            offset += end - start;\n        }\n    \n        return {\n            dec_key: decryptedKey,\n            enc_string: encryptedString\n        }\n    }\n\n    var savedData = document.getElementById('ketsu-final-data');\n    var parsedJson = JSON.parse(savedData.innerHTML);\n    var emptyKeyValue = [new KeyValue('Referer', window.location.href)];\n    var videos = [];\n    let subs = [];\n    var extraInfo = [];\n    let id = window.location.href.split('/')[5].split('?')[0];\n    let url = 'https://megacloud.tv/embed-2/ajax/e-1/getSources?id=' + id;\n    let json = JSON.parse(getFile(url));\n    let key;\n    if (json.encrypted) {\n        let data = json.sources;\n        let enc_key = JSON.parse(getFile(\"https://raw.githubusercontent.com/enimax-anime/key/e6/key.txt\"));\n        \n        try {\n            console.log(data)\n        console.log(enc_key)\n          key = extractAndConcatenateString(data, enc_key);\n        } catch(e){\n            console.log(e);\n        }\n        console.log(key);\n        let decrypted = CryptoJS.AES.decrypt(key.enc_string, key.dec_key).toString(CryptoJS.enc.Utf8);\n        let videoLink = JSON.parse(decrypted)[0].file;\n        var nextRequest = videoLink;\n        var substracks = json.tracks;\n        if (substracks == undefined) {\n            substracks = '';\n        } else {\n            for (let x = 0; x < substracks.length; x++) {\n                let sub = substracks[x];\n                let sublink = sub.file;\n                sublink = new ModuleRequest(sublink, 'get', emptyKeyValue, null);\n                let sublang = sub.label;\n                let subobj = new VideoSub(sublang, sublink);\n                subs.push(subobj);\n            }\n            for (let y = 0; y < subs.length; y++) {\n                let string = JSON.stringify(subs[y]);\n                let keyvalue = new KeyValue(`${y+1}`, `${string}`);\n                extraInfo.push(keyvalue);\n            }\n        }\n    } else {\n        let paramjson = json;\n        var nextRequest = paramjson.sources[0].file;\n        var substracks = paramjson.tracks;\n        if (substracks == undefined) {\n            substracks = '';\n        } else {\n            for (var x = 0; x < substracks.length; x++) {\n                var sub = substracks[x];\n                var sublink = sub.file;\n                sublink = new ModuleRequest(sublink, 'get', emptyKeyValue, null);\n                var sublang = sub.label;\n                var subobj = new VideoSub(sublang, sublink);\n                subs.push(subobj);\n            }\n            for (var y = 0; y < subs.length; y++) {\n                var string = JSON.stringify(subs[y]);\n                var keyvalue = new KeyValue(`${y+1}`, `${string}`);\n                extraInfo.push(keyvalue);\n            }\n        }\n    }\n    let emptyExtra = new Extra([new Commands('', emptyKeyValue)], extraInfo);\n    var chaptersObject = new Resolver(new ModuleRequest(nextRequest, 'get', emptyKeyValue, null), emptyExtra, new JavascriptConfig(false, false, ''), new Output(videos));\n    var finalJson = JSON.stringify(chaptersObject);\n    console.log(finalJson);\n    savedData.innerHTML = finalJson;\n})  /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "",
                "video": [{
                    "videoQuality": "720",
                    "videoSubs": [{
                        "language": "",
                        "link": ""
                    }],
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIdNmRiTmTdLWPAEVpkGJcN": {
                "path": "pvhcS",
                "id": "moduleResolvers,1,resolver,0cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "javascriptEditorScroll": 127,
                "openedMenu": "Javascript"
            }
        }, {
            "request": {
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": false,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */         function Resolver ( request, extra, javascriptConfig, output ) {\n         this.request = request;\n         this.extra = extra;\n         this.javascriptConfig = javascriptConfig;\n         this.output = output;\n }\n\n function ModuleRequest ( url, method, headers, httpBody ) {\n         this.url = url;\n         this.method = method;\n         this.headers = headers;\n         this.httpBody = httpBody;\n }\n\n function Extra ( commands, extraInfo ) {\n         this.commands = commands;\n         this.extraInfo = extraInfo;\n }\n\n function Commands ( commandName, params ) {\n         this.commandName = commandName;\n         this.params = params;\n }\n\n function JavascriptConfig ( removeJavascript, loadInWebView, javaScript ) {\n         this.removeJavascript = removeJavascript;\n         this.loadInWebView = loadInWebView;\n         this.javaScript = javaScript;\n }\n\n function KeyValue ( key, value ) {\n         this.key = key;\n         this.value = value;\n }\n\n function Output ( video, subs ) {\n         this.video = video;\n         this.subs = subs;\n }\n\n function Video ( videoQuality, videoLink ) {\n         this.videoQuality = videoQuality;\n         this.videoLink = videoLink;\n }\n\n function VideoSub ( language, link ) {\n         this.language = language;\n         this.link = link;\n }\n\n function getNext ( match, array ) {\n         for ( var x = 0; x < array.length; x++ ) {\n                 let mMatch = array[ x ];\n                 if ( mMatch.includes( match ) ) {\n                         return array[ x + 1 ];\n                 }\n         }\n }\n var savedData = document.getElementById( 'ketsu-final-data' );\n var parsedJson = JSON.parse( savedData.innerHTML );\n var emptyKeyValue = [ new KeyValue( 'Referer', 'https://aniwatch.to/watch' ) ];\n var videos = [ ];\n var extraInfo = parsedJson.extra.extraInfo;\n var subs = [ ];\n var body = document.querySelector( 'script' ).innerText.replace( '*/', '' ).replace( '/*', '' );\n var lines = body.split( '\\n' );\n if ( extraInfo.length >= 1 ) {\n         for ( var y = 0; y < extraInfo.length; y++ ) {\n                 var sub = JSON.parse( extraInfo[ y ].value );\n                 subs.push( sub );\n         }\n } else {\n         subs = undefined;\n }\n for ( var x = 0; x < lines.length; x++ ) {\n         var line = lines[ x ];\n         if ( line.includes( 'EXT-X-STREAM-INF:PROGRAM-ID=1' ) ) {\n                 var videoQuality = line.split( 'RESOLUTION=' )[ 1 ].match( /(\\d)+x+(\\d)+/g )[ 0 ];\n                 var videoLink = lines[ x + 1 ];\n                 var fixedLink = parsedJson.request.url.replace( 'master.m3u8', videoLink );\n                 videos.push( new Video( videoQuality, new ModuleRequest( fixedLink, 'get', emptyKeyValue, null ) ) );\n         }\n }\n let emptyExtra = new Extra( [ new Commands( '', emptyKeyValue ) ], emptyKeyValue );\n var chaptersObject = new Resolver( new ModuleRequest( '', 'get', emptyKeyValue, null ), emptyExtra, new JavascriptConfig( false, false, '' ), new Output( videos, subs ) );\n var finalJson = JSON.stringify( chaptersObject );\n savedData.innerHTML = finalJson;\n        /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "output": {
                "moduleID": "",
                "video": [{
                    "videoQuality": "720",
                    "videoSubs": [{
                        "language": "",
                        "link": ""
                    }],
                    "videoLink": {
                        "url": "http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4",
                        "method": "get",
                        "headers": [{
                            "key": "key",
                            "value": "value"
                        }],
                        "httpBody": null
                    }
                }]
            },
            "moduleCreatorIdgoIhAoToEslrwnHAaiFa": {
                "path": "FMRYZ",
                "id": "moduleResolvers,1,resolver,1cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "openedMenu": "Javascript",
                "javascriptEditorScroll": 86
            }
        }],
        "moduleCreatorIddAGQjePJomIydfOKMKiE": {
            "path": "deChS",
            "id": "moduleResolvers,1section",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdQkhEiwSCZPVfpiMFqCyG": {
            "path": "resolver",
            "id": "moduleResolvers,1,resolversection",
            "sectionsHidden": [],
            "options": {
                "name": "Resolver Request",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "responseCodeFunctions": [{
        "code": 0,
        "msgTitle": "",
        "msgBody": "",
        "type": "normal",
        "functions": [{
            "request": {
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value",
                    "moduleCreatorHeaderisActive": true
                }, {
                    "key": "",
                    "value": "",
                    "moduleCreatorHeaderisActive": true
                }]
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */   \n   /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "moduleCreatorIdvDFVLxfXyghHLvscLpdz": {
                "path": "fRhVY",
                "id": "responseCodeFunctions,0,functions,0cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false,
                "javascriptEditorScroll": 2
            }
        }],
        "moduleCreatorIdRJMUxMvWVQrbnOKtMoFr": {
            "path": "TznBl",
            "id": "responseCodeFunctions,0section",
            "sectionsHidden": [],
            "options": {
                "name": "Function"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdYokFBafXmbBSZLLsZltl": {
            "path": "DYWCZ",
            "id": "responseCodeFunctions,0,section",
            "sectionsHidden": [],
            "options": {
                "name": "Function Parameters",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdhwkGBCMfLMQzpgLJhQHx": {
            "path": "BFRov",
            "id": "responseCodeFunctions,0,cell",
            "sectionsHidden": [],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdkzHDzNgRihDYYIjXpOAL": {
            "path": "functions",
            "id": "responseCodeFunctions,0,functionssection",
            "sectionsHidden": [],
            "options": {
                "name": "Function Requests",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "helperFunctions": [{
        "functionName": "example",
        "msgTitle": "",
        "msgBody": "",
        "type": "normal",
        "functions": [{
            "request": {
                "url": "empty",
                "method": "get",
                "headers": [{
                    "key": "key",
                    "value": "value"
                }],
                "httpBody": null
            },
            "extra": {
                "commands": [{
                    "commandName": "",
                    "params": [{
                        "key": "",
                        "value": ""
                    }]
                }],
                "extraInfo": [{
                    "key": "",
                    "value": ""
                }]
            },
            "javascriptConfig": {
                "removeJavascript": true,
                "loadInWebView": false,
                "javaScript": "\n        try {\n\n            /* JAVASCRIPT STARTS */                /* JAVASCRIPT ENDS */\n\n        } catch (e) {\n            console.error(e.message);\n\n            if (typeof KETSU_ASYNC !== 'undefined') {\n                window.webkit.messageHandlers.EXECUTE_KETSU_ASYNC.postMessage('');\n            }\n\n        }\n        \n        "
            },
            "moduleCreatorIdxFTuhGOYAuGcbiSaanIR": {
                "path": "WsyFa",
                "id": "helperFunctions,0,functions,0cell",
                "sectionsHidden": [],
                "options": {
                    "name": "Request"
                },
                "cellsHidden": false
            }
        }],
        "moduleCreatorIdptntGCRvsTvpTFryBNlI": {
            "path": "fAyzR",
            "id": "helperFunctions,0section",
            "sectionsHidden": [],
            "options": {
                "name": "Request"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdszJpUbsJdibpFGTneXAs": {
            "path": "OYKiY",
            "id": "helperFunctions,0,section",
            "sectionsHidden": [],
            "options": {
                "name": "Function Parameters",
                "listName": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdCrCcdOvzrhzyjfaoKwkn": {
            "path": "KJpIu",
            "id": "helperFunctions,0,cell",
            "sectionsHidden": [],
            "options": {
                "name": "Parameters"
            },
            "cellsHidden": false
        },
        "moduleCreatorIdpBbAVSznojReZUHjXNsk": {
            "path": "functions",
            "id": "helperFunctions,0,functionssection",
            "sectionsHidden": [],
            "options": {
                "name": "Function Requests",
                "listName": "Request"
            },
            "cellsHidden": false
        }
    }],
    "moduleCreatorGlobalOptions": {
        "selected": "moduleCreatorIdbdPLcIAmNwtGqhIoaIcA",
        "notes": {},
        "hideViews": [],
        "id": "EoRKhocLaueROPw",
        "projectName": "Aniwatch",
        "notesData": {
            "openedNotes": [],
            "activeNote": "oFwjzvDpdfxlaKQrGUwc",
            "notes": {}
        }
    },
    "moduleCreatorIdGzPXNgxSFrWKHppRMKWu": {
        "path": "mainPage",
        "id": "mainPagesection",
        "sectionsHidden": [],
        "options": {
            "name": "Main Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdYdmnknilvifajOEYwucG": {
        "path": "search",
        "id": "searchsection",
        "sectionsHidden": [],
        "options": {
            "name": "Search Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdNLtjeYlURhmWlZPuaQhI": {
        "path": "info",
        "id": "infosection",
        "sectionsHidden": [],
        "options": {
            "name": "Info Page",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdojVvZGmdwSvCLscMuBcF": {
        "path": "chapters",
        "id": "chapterssection",
        "sectionsHidden": [],
        "options": {
            "name": "Chapters",
            "listName": "Request"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdnVdZtyjiwEicZJfdGMIb": {
        "path": "moduleResolvers",
        "id": "moduleResolverssection",
        "sectionsHidden": [],
        "options": {
            "name": "Resolvers",
            "listName": "Resolver"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdvgQopbNlHmQMRtROkUCa": {
        "path": "responseCodeFunctions",
        "id": "responseCodeFunctionssection",
        "sectionsHidden": [],
        "options": {
            "name": "Response Code Funtions",
            "listName": "Function"
        },
        "cellsHidden": false
    },
    "moduleCreatorIdRjzfFiUPHcXeRGMKFrus": {
        "path": "helperFunctions",
        "id": "helperFunctionssection",
        "sectionsHidden": [],
        "options": {
            "name": "Helper Functions",
            "listName": "Request"
        },
        "cellsHidden": false
    }
}